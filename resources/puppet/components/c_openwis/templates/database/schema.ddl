--
-- OpenWIS Schema
--

-- *****************************
-- Schema for Data Service
--

-- Generated by mvn hibernate3:hbm2ddl

    create table OPENWIS_BLACKLIST_INFO (
        BLACKLIST_INFO_ID int8 not null,
        NB_DISS_BLACKLIST int8 not null,
        NB_DISS_WARN int8 not null,
        STATUS varchar(255),
        USER_ID varchar(255) not null unique,
        VOL_DISS_BLACKLIST int8 not null,
        VOL_DISS_WARN int8 not null,
        primary key (BLACKLIST_INFO_ID)
    );

    create table OPENWIS_CACHED_FILE (
        CACHED_FILE_ID int8 not null,
        CHECKSUM varchar(255),
        FILENAME varchar(255),
        FILESIZE int8,
        INSERTION_DATE timestamp,
        INTERNAL_FILENAME varchar(255),
        NUMBER_OF_CHECKSUM_BYTES int4,
        PATH varchar(255),
        PRIORITY int4,
        RECEIVED_FROM_GTS bool,
        primary key (CACHED_FILE_ID),
        unique (FILENAME, CHECKSUM)
    );

    create table OPENWIS_CACHE_CONFIGURATION (
        OPENWIS_CONFIGURATION_KEY varchar(255) not null,
        OPENWIS_CONFIGURATION_VALUE int8,
        primary key (OPENWIS_CONFIGURATION_KEY)
    );

    create table OPENWIS_CACHE_REPLICATION_FILTER (
        FILTER_ID int8 not null,
        ACTIVE bool,
        DESCRIPTION varchar(255),
        REGEX varchar(255),
        SOURCE varchar(255),
        TYPE varchar(255),
        UPTIME timestamp,
        primary key (FILTER_ID)
    );

    create table OPENWIS_DIFFUSION (
        REQUEST_OBJECT_TYPE varchar(30) not null,
        DIFFUSION_ID int8 not null,
        ADDRESS varchar(255),
        FILE_NAME varchar(255),
        HEADER_LINE varchar(255),
        MAIL_ATTACHMENT_MODE varchar(255),
        MAIL_DISPATCH_MODE varchar(255),
        SUBJECT varchar(255),
        IS_CHECK_FILE_SIZE bool,
        IS_ENCRYPTED bool,
        HOST varchar(255),
        IS_PASSIVE bool,
        PASSWORD varchar(255),
        PATH varchar(255),
        PORT varchar(255),
        USER_ID varchar(255),
        primary key (DIFFUSION_ID)
    );

    create table OPENWIS_DISSEMINATION (
        REQUEST_OBJECT_TYPE varchar(30) not null,
        DISSEMINATION_ID int8 not null,
        DISSEMINATION_ZIP_MODE varchar(255),
        DIFFUSION_ID int8,
        MSS_FSS_CHANNEL_ID int8,
        primary key (DISSEMINATION_ID)
    );

    create table OPENWIS_DISSEMINATION_JOB (
        DISSEMINATION_JOB_ID int8 not null,
        FILE_URI varchar(255) not null,
        FINAL_STATE varchar(255) not null,
        NUMBER_OF_FILES int4,
        PRIMARY_DISSEMINATION varchar(255) not null,
        PRIMARY_STATE varchar(255) not null,
        REQUEST_ID int8 not null,
        SECONDARY_DISSEMINATION varchar(255) not null,
        SECONDARY_STATE varchar(255) not null,
        TIMESTAMP int8 not null,
        TOTAL_SIZE int8,
        primary key (DISSEMINATION_JOB_ID)
    );

    create table OPENWIS_FILETYPE_FILTERS (
        FILETYPE varchar(255) not null,
        INCLUDE bool,
        primary key (FILETYPE)
    );

    create table OPENWIS_FILE_PACKER_INSTANCE (
        FILE_PACKER_NAME varchar(255) not null,
        NUMBER_OF_INCLUDED_BULLETINS int4,
        PACKAGE_NAME varchar(255),
        PACKAGE_NUMBER int4,
        TRANSMISSION_SEQUENCE_NUMBER int4,
        primary key (FILE_PACKER_NAME)
    );

    create table OPENWIS_FREQUENCY (
        REQUEST_OBJECT_TYPE varchar(30) not null,
        FREQUENCY_ID int8 not null,
        IS_ZIPPED bool,
        NEXT_DATE timestamp,
        RECURRENCE_PERIOD int4,
        RECURRENT_SCALE varchar(255),
        primary key (FREQUENCY_ID)
    );

    create table OPENWIS_MAPPED_METADATA (
        MAPPING_ID int8 not null,
        CACHED_FILE_ID int8,
        PRODUCT_METADATA_ID int8,
        primary key (MAPPING_ID)
    );

    create table OPENWIS_MSSFSS_FEEDING_FILTER (
        FILTER_ID int8 not null,
        DESCRIPTION varchar(255),
        REGEX varchar(255),
        primary key (FILTER_ID)
    );

    create table OPENWIS_MSSFSS_INGESTION_FILTER (
        FILTER_ID int8 not null,
        DESCRIPTION varchar(255),
        REGEX varchar(255),
        primary key (FILTER_ID)
    );

    create table OPENWIS_MSS_FSS_CHANNEL (
        MSS_FSS_CHANNEL_ID int8 not null,
        CHANNEL varchar(255),
        primary key (MSS_FSS_CHANNEL_ID)
    );

    create table OPENWIS_PARAMETER (
        PARAMETER_ID int8 not null,
        CODE varchar(255),
        primary key (PARAMETER_ID)
    );

    create table OPENWIS_PARAMETER_VALUES (
        PARAMETER_ID int8 not null,
        VALUE_ID int8 not null,
        primary key (PARAMETER_ID, VALUE_ID),
        unique (VALUE_ID)
    );

    create table OPENWIS_PATTERN_METADATA_MAPPING (
        PATTERN_METADATA_MAPPING_ID int8 not null,
        PATTERN varchar(1024) not null,
        productMetadata_PRODUCT_METADATA_ID int8,
        primary key (PATTERN_METADATA_MAPPING_ID)
    );

    create table OPENWIS_PROCESSED_REQUEST (
        PROCESSED_REQUEST_ID int8 not null,
        COMPLETED_DATE timestamp,
        CREATION_DATE timestamp,
        MESSAGE varchar(1024),
        REQUEST_RESULT_STATUS varchar(255),
        SIZE int8,
        SUBMITTED_DATE timestamp,
        REQUEST_URI varchar(255),
        version int8 not null,
        REQUEST_ID int8,
        primary key (PROCESSED_REQUEST_ID)
    );

    create table OPENWIS_PRODUCT_METADATA (
        PRODUCT_METADATA_ID int8 not null,
        CREATION_DATE timestamp,
        DATA_POLICY varchar(255) not null,
        IS_FED bool not null,
        FILE_EXTENSION varchar(255),
        FNC_PATTERN varchar(1024),
        GTS_CATEGORY varchar(255) not null,
        IS_INGESTED bool not null,
        LOCAL_DATA_SOURCE varchar(255) not null,
        ORIGINATOR varchar(255) not null,
        OVERRIDEN_DATA_POLICY varchar(255),
        OVERRIDEN_FILE_EXTENSION varchar(255),
        OVERRIDEN_FNC_PATTERN varchar(1024),
        OVERRIDEN_GTS_CATEGORY varchar(255),
        OVERRIDEN_PRIORITY int4,
        PRIORITY int4 not null,
        PROCESS varchar(255) not null,
        STOP_GAP bool not null,
        TITLE varchar(255) not null,
        URN citext not null unique,
        UPDATE_FREQUENCY_ID int8,
        primary key (PRODUCT_METADATA_ID)
    );

    create table OPENWIS_REQUEST (
        REQUEST_OBJECT_TYPE varchar(30) not null,
        REQUEST_ID int8 not null,
        USER_CLASS_OF_SERVICE varchar(255),
        USER_EMAIL varchar(255),
        EXTRACT_MODE varchar(255) not null,
        USER_ID varchar(255),
        BACKUP bool,
        LAST_EVENT_DATE timestamp,
        STARTING_DATE timestamp,
        STATE varchar(255),
        IS_VALID bool,
        PRIMARY_DISSEMINATION_ID int8 not null,
        PRODUCT_METADATA_ID int8 not null,
        SECONDARY_DISSEMINATION_ID int8,
        FREQUENCY_ID int8,
        subscriptionBackup_SUBSCRIPTION_BACKUP_ID int8,
        primary key (REQUEST_ID),
        unique (PRIMARY_DISSEMINATION_ID)
    );

    create table OPENWIS_REQUESTS_PARAMETERS (
        REQUEST_ID int8 not null,
        PARAMETER_ID int8 not null,
        primary key (REQUEST_ID, PARAMETER_ID),
        unique (PARAMETER_ID)
    );

    create table OPENWIS_SUBSCRIPTION_BACKUP (
        SUBSCRIPTION_BACKUP_ID int8 not null,
        DEPLOYMENT varchar(255),
        SUBCRIPTION_ID int8,
        primary key (SUBSCRIPTION_BACKUP_ID)
    );

    create table OPENWIS_TIMER_CONFIGURATION (
        TIMER_ID varchar(255) not null,
        freeLock bool not null,
        primary key (TIMER_ID)
    );

    create table OPENWIS_UPDATE_FREQUENCY (
        REQUEST_OBJECT_TYPE varchar(30) not null,
        UPDATE_FREQUENCY_ID int8 not null,
        RECURRENT_PERIOD int4,
        RECURRENT_SCALE varchar(255),
        FROM_DATE timestamp,
        TO_DATE timestamp,
        primary key (UPDATE_FREQUENCY_ID)
    );

    create table OPENWIS_VALUE (
        VALUE_ID int8 not null,
        VALUE varchar(255),
        primary key (VALUE_ID)
    );

    create index cached_file_filename_index on OPENWIS_CACHED_FILE (FILENAME);

    create index cached_file_checksum_index on OPENWIS_CACHED_FILE (CHECKSUM);

    alter table OPENWIS_DISSEMINATION 
        add constraint FK22FE121B8A8E1AA2 
        foreign key (MSS_FSS_CHANNEL_ID) 
        references OPENWIS_MSS_FSS_CHANNEL;

    alter table OPENWIS_DISSEMINATION 
        add constraint FK22FE121BF7861390 
        foreign key (DIFFUSION_ID) 
        references OPENWIS_DIFFUSION;

    create index CACHED_FILE_ID_INDEX on OPENWIS_MAPPED_METADATA (CACHED_FILE_ID);

    alter table OPENWIS_PARAMETER_VALUES 
        add constraint FK59CDF0A0FB6163BB 
        foreign key (PARAMETER_ID) 
        references OPENWIS_PARAMETER;

    alter table OPENWIS_PARAMETER_VALUES 
        add constraint FK59CDF0A05155A73B 
        foreign key (VALUE_ID) 
        references OPENWIS_VALUE;

    alter table OPENWIS_PATTERN_METADATA_MAPPING 
        add constraint FK77F2CA95F647B59 
        foreign key (productMetadata_PRODUCT_METADATA_ID) 
        references OPENWIS_PRODUCT_METADATA;

    alter table OPENWIS_PROCESSED_REQUEST 
        add constraint FKB463156E7A663B 
        foreign key (REQUEST_ID) 
        references OPENWIS_REQUEST;

    alter table OPENWIS_PRODUCT_METADATA 
        add constraint FK2FD13EA793421F08 
        foreign key (UPDATE_FREQUENCY_ID) 
        references OPENWIS_UPDATE_FREQUENCY;

    alter table OPENWIS_REQUEST 
        add constraint FK3EFA1367C2F94C66 
        foreign key (subscriptionBackup_SUBSCRIPTION_BACKUP_ID) 
        references OPENWIS_SUBSCRIPTION_BACKUP;

    alter table OPENWIS_REQUEST 
        add constraint FK3EFA13674D824D29 
        foreign key (FREQUENCY_ID) 
        references OPENWIS_FREQUENCY;

    alter table OPENWIS_REQUEST 
        add constraint FK3EFA13673A25686D 
        foreign key (PRIMARY_DISSEMINATION_ID) 
        references OPENWIS_DISSEMINATION;

    alter table OPENWIS_REQUEST 
        add constraint FK3EFA1367BA67173B 
        foreign key (SECONDARY_DISSEMINATION_ID) 
        references OPENWIS_DISSEMINATION;

    alter table OPENWIS_REQUEST 
        add constraint FK3EFA13673BE4BFFA 
        foreign key (PRODUCT_METADATA_ID) 
        references OPENWIS_PRODUCT_METADATA;

    alter table OPENWIS_REQUESTS_PARAMETERS 
        add constraint FK3FE5D23DE7A663B 
        foreign key (REQUEST_ID) 
        references OPENWIS_REQUEST;

    alter table OPENWIS_REQUESTS_PARAMETERS 
        add constraint FK3FE5D23DFB6163BB 
        foreign key (PARAMETER_ID) 
        references OPENWIS_PARAMETER;

    create sequence BLACKLIST_INFO_SEQ;

    create sequence CACHED_FILE_SEQ;

    create sequence CACHE_REPLICATION_FILTER_SEQ;

    create sequence DIFFUSION_SEQ;

    create sequence DISSEMINATION_JOB_SEQ;

    create sequence DISSEMINATION_SEQ;

    create sequence FREQUENCY_SEQ;

    create sequence MAPPED_METADATA_SEQ;

    create sequence MSSFSS_CHANNEL_SEQ;

    create sequence MSSFSS_FEEDING_FILTER_SEQ;

    create sequence MSSFSS_INGESTION_FILTER_SEQ;

    create sequence PARAMETER_SEQ;

    create sequence PATTERN_METADATA_MAPPING_SEQ;

    create sequence PROCESSED_REQUEST_SEQ;

    create sequence PRODUCT_METADATA_SEQ;

    create sequence REQUEST_SEQ;

    create sequence SUBSCRIPTION_BACKUP_SEQ;

    create sequence UPDATE_FREQUENCY_SEQ;

    create sequence VALUE_SEQ;
    
--
-- Custom Data Service statements

-- Drop ProcessedRequest -> Request FK constraint to avoid lock of Request table 
-- when updating the ProcessedRequest (e.g. when updating the status)
-- Create an index on openwis_processed_request.request_id to optimize the join

ALTER TABLE openwis_processed_request DROP CONSTRAINT fkb463156e7a663b;

CREATE INDEX request_id_index
  ON openwis_processed_request
  USING btree
  (request_id);
  
  
    
-- *****************************
-- Schema for Management Service
--

    create table OPENWIS_ALARMS (
        EVENT_ID int8 not null,
        DATE timestamp,
        MESSAGE text,
        MODULE varchar(255),
        SEVERITY varchar(255),
        SOURCE varchar(255),
        primary key (EVENT_ID)
    );

    create table OPENWIS_DATASERVICE_STATUS (
        SERVICE_STATUS_KEY varchar(255) not null,
        SERVICE_STATUS_VALUE int8,
        primary key (SERVICE_STATUS_KEY)
    );

    create table OPENWIS_DISSEMINATED_DATA (
        USER_DISSEMINATED_DATA_ID int8 not null,
        DATE timestamp,
        DISS_TOOL_NB_FILES int4 not null,
        DISS_TOOL_SIZE int8 not null,
        NB_FILES int4 not null,
        SIZE int8 not null,
        USER_ID varchar(255),
        primary key (USER_DISSEMINATED_DATA_ID),
        unique (DATE, USER_ID)
    );

    create table OPENWIS_EXCHANGED_DATA (
        EXCHANGED_DATA_ID int8 not null,
        DATE timestamp,
        NB_MD int8,
        SOURCE varchar(255),
        TOTAL_SIZE int8,
        primary key (EXCHANGED_DATA_ID)
    );

    create table OPENWIS_INGESTED_DATA (
        INGESTED_DATA_ID int8 not null,
        DATE timestamp unique,
        SIZE int8,
        primary key (INGESTED_DATA_ID)
    );

    create table OPENWIS_REPLICATED_DATA (
        REPLICATED_DATA_ID int8 not null,
        DATE timestamp,
        SIZE int8,
        SOURCE varchar(255),
        primary key (REPLICATED_DATA_ID),
        unique (DATE, SOURCE)
    );

    create table OPENWIS_USER_ALARM (
       ALARM_ID int8 not null,
       DATE timestamp,
       USER_ID varchar(255),
       REQ_TYPE varchar(255),
       REQ_ID int8,
       PROCESSED_REQ_ID int8,
       MESSAGE varchar(255),
       primary key (ALARM_ID)
     );

    create index USER_ID_AND_REQ_TYPE_IDX on OPENWIS_USER_ALARM (user_id, req_type);

    create sequence USER_ALARM_SEQ;

    create sequence ALARMS_SEQ;

    create sequence DISSEMINATED_SEQ;

    create sequence EXCHANGED_SEQ;

    create sequence INGESTED_SEQ;

    create sequence REPLICATED_SEQ;
