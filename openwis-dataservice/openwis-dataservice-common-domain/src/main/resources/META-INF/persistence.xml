<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/persistence http://java.sun.com/xml/ns/persistence/persistence_1_0.xsd"
	version="1.0">
	<persistence-unit name="openwis-dataservice-common-domain"
		transaction-type="JTA">
		<provider>org.hibernate.ejb.HibernatePersistence</provider>
		<jta-data-source>java:/OpenwisDS</jta-data-source>
		
		<!--<class>org.openwis.dataservice.common.domain.subscription.Subscription</class>
		<class>org.openwis.dataservice.common.domain.subscription.Frequency</class>
		<class>org.openwis.dataservice.common.domain.subscription.RecurrentFrequency</class>
		<class>org.openwis.dataservice.common.domain.subscription.EventBasedFrequency</class>--> 
		<class>org.openwis.dataservice.common.domain.entity.request.ProductMetadata</class>
		<class>org.openwis.dataservice.common.domain.entity.cache.CachedFile</class>
		<class>org.openwis.dataservice.common.domain.entity.cache.MappedMetadata</class>
		<class>org.openwis.dataservice.common.domain.entity.cache.FiletypeFilter</class>
		<class>org.openwis.dataservice.common.domain.entity.cache.IngestionFilter</class>
		<class>org.openwis.dataservice.common.domain.entity.cache.ReplicationFilter</class>
		<class>org.openwis.dataservice.common.domain.entity.cache.FeedingFilter</class>
		<class>org.openwis.dataservice.common.domain.entity.request.dissemination.DisseminationJob</class>
		<class>org.openwis.dataservice.common.domain.entity.cache.CacheConfiguration</class>
		<class>org.openwis.dataservice.common.domain.entity.cache.PatternMetadataMapping</class>
		<class>org.openwis.dataservice.common.domain.entity.cache.FilePackerInstance</class>		
		
		<properties>
			<property name="hibernate.bytecode.provider" value="javassist" />
			<property name="hibernate.show_sql" value="false" />
			<property name="hibernate.use_sql_comments" value="false" />
			<property name="hibernate.query.substitutions" value="true 1, false 0, yes 'O', no 'N'" />
			<!-- BEGIN 2nd level cache management  -->
			<property name="hibernate.cache.use_second_level_cache"
				value="true" />
			<property name="hibernate.cache.use_query_cache" value="true" />
			<!-- END 2nd level cache management  -->
      <!-- 
            TODO - lmika: Re-enable a cache
            
            <property name="hibernate.cache.region.factory_class" value="org.hibernate.cache.jbc2.JndiMultiplexedJBossCacheRegionFactory"/>
            <!-+- region factory specific properties -+-> 
            <property name="hibernate.cache.region.jbc2.cachefactory" value="java:CacheManager"/> 
            <property name="hibernate.cache.region.jbc2.cfg.entity" value="mvcc-entity"/>
            <property name="hibernate.cache.region.jbc2.cfg.collection" value="mvcc-entity"/>
       -->
                          
			<property name="hibernate.dialect" value="org.hibernate.dialect.PostgreSQLDialect" />
			<!--
				property name="hibernate.dialect"
				value="org.hibernate.dialect.Oracle10gDialect" />
			-->
			<!--property name="hibernate.hbm2ddl.auto" value="create" /-->
		</properties>
	</persistence-unit>

</persistence>