<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project id="719a8051-85ba-4080-92e7-03728bde4d43" activeEnvironment="Default" name="openwis-securityservice" resourceRoot="" soapui-version="5.2.0" abortOnError="false" runType="SEQUENTIAL" xmlns:con="http://eviware.com/soapui/config"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.TestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Environment" value="Default"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="TestSuite" value="SecurityServiceTestSuite"/>
  <con:entry key="Password" value=""/>
  <con:entry key="TestRunner Path" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="user-settings.xml Password" value=""/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Save Project" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Export JUnit Results" value="false"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Export All" value="false"/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Report Format(s)" value=""/>
  <con:entry key="TestCase" value="CleanAll"/>
  <con:entry key="Print Report" value="false"/>
  <con:entry key="Username" value=""/>
  <con:entry key="Root Folder" value=""/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Select Report Type" value=""/>
</xml-fragment>]]></con:setting></con:settings><con:interface xsi:type="con:WsdlInterface" id="933740e1-4a3e-4887-a13c-bc977a8909a1" wsaVersion="NONE" name="DisseminationParametersServiceSoapBinding" type="wsdl" bindingName="{http://securityservice.openwis.org/}DisseminationParametersServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/openwis-securityservice/services/DisseminationParametersService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/openwis-securityservice/services/DisseminationParametersService?wsdl"><con:part><con:url>http://localhost:8080/openwis-securityservice/services/DisseminationParametersService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="DisseminationParametersService" targetNamespace="http://securityservice.openwis.org/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://securityservice.openwis.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://securityservice.openwis.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="addOrUpdateEmailForDisseminationParameters" type="tns:addOrUpdateEmailForDisseminationParameters"/>
      <xs:element name="addOrUpdateEmailForDisseminationParametersResponse" type="tns:addOrUpdateEmailForDisseminationParametersResponse"/>
      <xs:element name="addOrUpdateFTPForDisseminationParameters" type="tns:addOrUpdateFTPForDisseminationParameters"/>
      <xs:element name="addOrUpdateFTPForDisseminationParametersResponse" type="tns:addOrUpdateFTPForDisseminationParametersResponse"/>
      <xs:element name="getEmailForDisseminationParameters" type="tns:getEmailForDisseminationParameters"/>
      <xs:element name="getEmailForDisseminationParametersResponse" type="tns:getEmailForDisseminationParametersResponse"/>
      <xs:element name="getFTPForDisseminationParameters" type="tns:getFTPForDisseminationParameters"/>
      <xs:element name="getFTPForDisseminationParametersResponse" type="tns:getFTPForDisseminationParametersResponse"/>
      <xs:element name="removeEmailForDisseminationParameters" type="tns:removeEmailForDisseminationParameters"/>
      <xs:element name="removeEmailForDisseminationParametersResponse" type="tns:removeEmailForDisseminationParametersResponse"/>
      <xs:element name="removeFTPForDisseminationParameters" type="tns:removeFTPForDisseminationParameters"/>
      <xs:element name="removeFTPForDisseminationParametersResponse" type="tns:removeFTPForDisseminationParametersResponse"/>
      <xs:complexType name="addOrUpdateFTPForDisseminationParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element minOccurs="0" name="ftp" type="tns:openWISFTP"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISFTP">
        <xs:sequence>
          <xs:element name="checkFileSize" type="xs:boolean"/>
          <xs:element minOccurs="0" name="disseminationTool" type="tns:disseminationTool"/>
          <xs:element name="encrypted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element minOccurs="0" name="host" type="xs:string"/>
          <xs:element name="passive" type="xs:boolean"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
          <xs:element minOccurs="0" name="port" type="xs:string"/>
          <xs:element minOccurs="0" name="user" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addOrUpdateFTPForDisseminationParametersResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getFTPForDisseminationParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getFTPForDisseminationParametersResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISFTP"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeEmailForDisseminationParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="tns:openWISEmail"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISEmail">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="disseminationTool" type="tns:disseminationTool"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element minOccurs="0" name="headerLine" type="xs:string"/>
          <xs:element minOccurs="0" name="mailAttachmentMode" type="xs:string"/>
          <xs:element minOccurs="0" name="mailDispatchMode" type="xs:string"/>
          <xs:element minOccurs="0" name="subject" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeEmailForDisseminationParametersResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="removeFTPForDisseminationParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element minOccurs="0" name="ftp" type="tns:openWISFTP"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeFTPForDisseminationParametersResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getEmailForDisseminationParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getEmailForDisseminationParametersResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISEmail"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addOrUpdateEmailForDisseminationParameters">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element minOccurs="0" name="email" type="tns:openWISEmail"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addOrUpdateEmailForDisseminationParametersResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:simpleType name="disseminationTool">
        <xs:restriction base="xs:string">
          <xs:enumeration value="RMDCN"/>
          <xs:enumeration value="PUBLIC"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="UserManagementException" type="tns:UserManagementException"/>
      <xs:complexType name="UserManagementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="getEmailForDisseminationParametersResponse">
    <wsdl:part element="tns:getEmailForDisseminationParametersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeFTPForDisseminationParametersResponse">
    <wsdl:part element="tns:removeFTPForDisseminationParametersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeEmailForDisseminationParameters">
    <wsdl:part element="tns:removeEmailForDisseminationParameters" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addOrUpdateFTPForDisseminationParameters">
    <wsdl:part element="tns:addOrUpdateFTPForDisseminationParameters" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFTPForDisseminationParametersResponse">
    <wsdl:part element="tns:getFTPForDisseminationParametersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getEmailForDisseminationParameters">
    <wsdl:part element="tns:getEmailForDisseminationParameters" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getFTPForDisseminationParameters">
    <wsdl:part element="tns:getFTPForDisseminationParameters" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeEmailForDisseminationParametersResponse">
    <wsdl:part element="tns:removeEmailForDisseminationParametersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserManagementException">
    <wsdl:part element="tns:UserManagementException" name="UserManagementException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addOrUpdateEmailForDisseminationParametersResponse">
    <wsdl:part element="tns:addOrUpdateEmailForDisseminationParametersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addOrUpdateEmailForDisseminationParameters">
    <wsdl:part element="tns:addOrUpdateEmailForDisseminationParameters" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeFTPForDisseminationParameters">
    <wsdl:part element="tns:removeFTPForDisseminationParameters" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addOrUpdateFTPForDisseminationParametersResponse">
    <wsdl:part element="tns:addOrUpdateFTPForDisseminationParametersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="DisseminationParametersService">
    <wsdl:operation name="addOrUpdateFTPForDisseminationParameters">
      <wsdl:input message="tns:addOrUpdateFTPForDisseminationParameters" name="addOrUpdateFTPForDisseminationParameters"></wsdl:input>
      <wsdl:output message="tns:addOrUpdateFTPForDisseminationParametersResponse" name="addOrUpdateFTPForDisseminationParametersResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFTPForDisseminationParameters">
      <wsdl:input message="tns:getFTPForDisseminationParameters" name="getFTPForDisseminationParameters"></wsdl:input>
      <wsdl:output message="tns:getFTPForDisseminationParametersResponse" name="getFTPForDisseminationParametersResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeEmailForDisseminationParameters">
      <wsdl:input message="tns:removeEmailForDisseminationParameters" name="removeEmailForDisseminationParameters"></wsdl:input>
      <wsdl:output message="tns:removeEmailForDisseminationParametersResponse" name="removeEmailForDisseminationParametersResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeFTPForDisseminationParameters">
      <wsdl:input message="tns:removeFTPForDisseminationParameters" name="removeFTPForDisseminationParameters"></wsdl:input>
      <wsdl:output message="tns:removeFTPForDisseminationParametersResponse" name="removeFTPForDisseminationParametersResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEmailForDisseminationParameters">
      <wsdl:input message="tns:getEmailForDisseminationParameters" name="getEmailForDisseminationParameters"></wsdl:input>
      <wsdl:output message="tns:getEmailForDisseminationParametersResponse" name="getEmailForDisseminationParametersResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addOrUpdateEmailForDisseminationParameters">
      <wsdl:input message="tns:addOrUpdateEmailForDisseminationParameters" name="addOrUpdateEmailForDisseminationParameters"></wsdl:input>
      <wsdl:output message="tns:addOrUpdateEmailForDisseminationParametersResponse" name="addOrUpdateEmailForDisseminationParametersResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="DisseminationParametersServiceSoapBinding" type="tns:DisseminationParametersService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="addOrUpdateFTPForDisseminationParameters">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addOrUpdateFTPForDisseminationParameters">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addOrUpdateFTPForDisseminationParametersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getFTPForDisseminationParameters">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getFTPForDisseminationParameters">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getFTPForDisseminationParametersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeEmailForDisseminationParameters">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeEmailForDisseminationParameters">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeEmailForDisseminationParametersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getEmailForDisseminationParameters">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getEmailForDisseminationParameters">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getEmailForDisseminationParametersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeFTPForDisseminationParameters">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeFTPForDisseminationParameters">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeFTPForDisseminationParametersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addOrUpdateEmailForDisseminationParameters">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addOrUpdateEmailForDisseminationParameters">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addOrUpdateEmailForDisseminationParametersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="DisseminationParametersService">
    <wsdl:port binding="tns:DisseminationParametersServiceSoapBinding" name="DisseminationParametersServicePort">
      <soap:address location="http://localhost:8080/openwis-securityservice/services/DisseminationParametersService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint></con:endpoints><con:operation id="5baa3f0d-bbc3-419b-98ad-030fc5d846f2" isOneWay="false" action="" name="addOrUpdateEmailForDisseminationParameters" bindingOperationName="addOrUpdateEmailForDisseminationParameters" type="Request-Response" outputName="addOrUpdateEmailForDisseminationParametersResponse" inputName="addOrUpdateEmailForDisseminationParameters" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5ce2f256-0e54-4df8-9032-d348cf6ad493" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:addOrUpdateEmailForDisseminationParameters><!--Optional:-->
         <username>?</username>
         <!--Optional:-->
         <email>
            <!--Optional:-->
            <address>?</address>
            <!--Optional:-->
            <disseminationTool>?</disseminationTool>
            <!--Optional:-->
            <fileName>?</fileName>
            <!--Optional:-->
            <headerLine>?</headerLine>
            <!--Optional:-->
            <mailAttachmentMode>?</mailAttachmentMode>
            <!--Optional:-->
            <mailDispatchMode>?</mailDispatchMode>
            <!--Optional:-->
            <subject>?</subject>
         </email>
      </sec:addOrUpdateEmailForDisseminationParameters>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/DisseminationParametersService/addOrUpdateEmailForDisseminationParameters"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="69697cca-e2d4-4cb9-bcd4-6f6999480378" isOneWay="false" action="" name="addOrUpdateFTPForDisseminationParameters" bindingOperationName="addOrUpdateFTPForDisseminationParameters" type="Request-Response" outputName="addOrUpdateFTPForDisseminationParametersResponse" inputName="addOrUpdateFTPForDisseminationParameters" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="dfe7c21b-4c3b-4454-b548-9082c09a23f3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:addOrUpdateFTPForDisseminationParameters><!--Optional:-->
         <username>?</username>
         <!--Optional:-->
         <ftp>
            <checkFileSize>?</checkFileSize>
            <!--Optional:-->
            <disseminationTool>?</disseminationTool>
            <encrypted>?</encrypted>
            <!--Optional:-->
            <fileName>?</fileName>
            <!--Optional:-->
            <host>?</host>
            <passive>?</passive>
            <!--Optional:-->
            <password>?</password>
            <!--Optional:-->
            <path>?</path>
            <!--Optional:-->
            <port>?</port>
            <!--Optional:-->
            <user>?</user>
         </ftp>
      </sec:addOrUpdateFTPForDisseminationParameters>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/DisseminationParametersService/addOrUpdateFTPForDisseminationParameters"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="2240a1da-4292-4b0b-8946-d9f0ca877297" isOneWay="false" action="" name="getEmailForDisseminationParameters" bindingOperationName="getEmailForDisseminationParameters" type="Request-Response" outputName="getEmailForDisseminationParametersResponse" inputName="getEmailForDisseminationParameters" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="89e511e9-78a5-4c60-9fde-a258ff9d06f2" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getEmailForDisseminationParameters><!--Optional:-->
         <username>yannick</username>
      </sec:getEmailForDisseminationParameters>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/DisseminationParametersService/getEmailForDisseminationParameters"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="eafce6a4-8047-41e8-adc6-ae7f5510086d" isOneWay="false" action="" name="getFTPForDisseminationParameters" bindingOperationName="getFTPForDisseminationParameters" type="Request-Response" outputName="getFTPForDisseminationParametersResponse" inputName="getFTPForDisseminationParameters" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="019e3dc0-09d3-4087-8253-784c21576fe5" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getFTPForDisseminationParameters>
      <!--Optional:-->
         <username>yannick</username>
      </sec:getFTPForDisseminationParameters>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/DisseminationParametersService/getFTPForDisseminationParameters"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="e54db288-3556-4512-9c50-5ce274497e3c" isOneWay="false" action="" name="removeEmailForDisseminationParameters" bindingOperationName="removeEmailForDisseminationParameters" type="Request-Response" outputName="removeEmailForDisseminationParametersResponse" inputName="removeEmailForDisseminationParameters" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5253e417-de0d-4547-8a29-1963b4d240ab" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeEmailForDisseminationParameters><!--Optional:-->
         <username>?</username>
         <!--Optional:-->
         <email>
            <!--Optional:-->
            <address>?</address>
            <!--Optional:-->
            <disseminationTool>?</disseminationTool>
            <!--Optional:-->
            <fileName>?</fileName>
            <!--Optional:-->
            <headerLine>?</headerLine>
            <!--Optional:-->
            <mailAttachmentMode>?</mailAttachmentMode>
            <!--Optional:-->
            <mailDispatchMode>?</mailDispatchMode>
            <!--Optional:-->
            <subject>?</subject>
         </email>
      </sec:removeEmailForDisseminationParameters>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/DisseminationParametersService/removeEmailForDisseminationParameters"/></con:call></con:operation><con:operation id="4df13736-306f-484e-8a66-4246250e1f76" isOneWay="false" action="" name="removeFTPForDisseminationParameters" bindingOperationName="removeFTPForDisseminationParameters" type="Request-Response" outputName="removeFTPForDisseminationParametersResponse" inputName="removeFTPForDisseminationParameters" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="324a5f5d-7d63-4369-9e94-110e39127dc3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeFTPForDisseminationParameters><!--Optional:-->
         <username>?</username>
         <!--Optional:-->
         <ftp>
            <checkFileSize>?</checkFileSize>
            <!--Optional:-->
            <disseminationTool>?</disseminationTool>
            <encrypted>?</encrypted>
            <!--Optional:-->
            <fileName>?</fileName>
            <!--Optional:-->
            <host>?</host>
            <passive>?</passive>
            <!--Optional:-->
            <password>?</password>
            <!--Optional:-->
            <path>?</path>
            <!--Optional:-->
            <port>?</port>
            <!--Optional:-->
            <user>?</user>
         </ftp>
      </sec:removeFTPForDisseminationParameters>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/DisseminationParametersService/removeFTPForDisseminationParameters"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="49a0907e-48d2-4adf-aacc-9217a160e3e1" wsaVersion="NONE" name="GroupManagementServiceSoapBinding" type="wsdl" bindingName="{http://securityservice.openwis.org/}GroupManagementServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/openwis-securityservice/services/GroupManagementService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/openwis-securityservice/services/GroupManagementService?wsdl"><con:part><con:url>http://localhost:8080/openwis-securityservice/services/GroupManagementService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="GroupManagementService" targetNamespace="http://securityservice.openwis.org/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://securityservice.openwis.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://securityservice.openwis.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="countUsersInGroup" type="tns:countUsersInGroup"/>
      <xs:element name="countUsersInGroupResponse" type="tns:countUsersInGroupResponse"/>
      <xs:element name="createGlobalGroup" type="tns:createGlobalGroup"/>
      <xs:element name="createGlobalGroupId" type="tns:createGlobalGroupId"/>
      <xs:element name="createGlobalGroupIdResponse" type="tns:createGlobalGroupIdResponse"/>
      <xs:element name="createGlobalGroupResponse" type="tns:createGlobalGroupResponse"/>
      <xs:element name="createLocalGroup" type="tns:createLocalGroup"/>
      <xs:element name="createLocalGroupId" type="tns:createLocalGroupId"/>
      <xs:element name="createLocalGroupIdResponse" type="tns:createLocalGroupIdResponse"/>
      <xs:element name="createLocalGroupResponse" type="tns:createLocalGroupResponse"/>
      <xs:element name="getAllGroups" type="tns:getAllGroups"/>
      <xs:element name="getAllGroupsResponse" type="tns:getAllGroupsResponse"/>
      <xs:element name="getAllUserNameByCentre" type="tns:getAllUserNameByCentre"/>
      <xs:element name="getAllUserNameByCentreResponse" type="tns:getAllUserNameByCentreResponse"/>
      <xs:element name="getAllUserNameByGroups" type="tns:getAllUserNameByGroups"/>
      <xs:element name="getAllUserNameByGroupsResponse" type="tns:getAllUserNameByGroupsResponse"/>
      <xs:element name="getAllUsersByGlobalGroup" type="tns:getAllUsersByGlobalGroup"/>
      <xs:element name="getAllUsersByGlobalGroupId" type="tns:getAllUsersByGlobalGroupId"/>
      <xs:element name="getAllUsersByGlobalGroupIdResponse" type="tns:getAllUsersByGlobalGroupIdResponse"/>
      <xs:element name="getAllUsersByGlobalGroupIds" type="tns:getAllUsersByGlobalGroupIds"/>
      <xs:element name="getAllUsersByGlobalGroupIdsResponse" type="tns:getAllUsersByGlobalGroupIdsResponse"/>
      <xs:element name="getAllUsersByGlobalGroupResponse" type="tns:getAllUsersByGlobalGroupResponse"/>
      <xs:element name="getAllUsersByGroup" type="tns:getAllUsersByGroup"/>
      <xs:element name="getAllUsersByGroupResponse" type="tns:getAllUsersByGroupResponse"/>
      <xs:element name="getAllUsersByGroups" type="tns:getAllUsersByGroups"/>
      <xs:element name="getAllUsersByGroupsResponse" type="tns:getAllUsersByGroupsResponse"/>
      <xs:element name="getAllUsersByLocalGroupId" type="tns:getAllUsersByLocalGroupId"/>
      <xs:element name="getAllUsersByLocalGroupIdResponse" type="tns:getAllUsersByLocalGroupIdResponse"/>
      <xs:element name="removeGlobalGroup" type="tns:removeGlobalGroup"/>
      <xs:element name="removeGlobalGroupId" type="tns:removeGlobalGroupId"/>
      <xs:element name="removeGlobalGroupIdResponse" type="tns:removeGlobalGroupIdResponse"/>
      <xs:element name="removeGlobalGroupResponse" type="tns:removeGlobalGroupResponse"/>
      <xs:element name="removeLocalGroup" type="tns:removeLocalGroup"/>
      <xs:element name="removeLocalGroupId" type="tns:removeLocalGroupId"/>
      <xs:element name="removeLocalGroupIdResponse" type="tns:removeLocalGroupIdResponse"/>
      <xs:element name="removeLocalGroupResponse" type="tns:removeLocalGroupResponse"/>
      <xs:element name="resetGroups" type="tns:resetGroups"/>
      <xs:element name="resetGroupsResponse" type="tns:resetGroupsResponse"/>
      <xs:element name="synchronizeLDAP" type="tns:synchronizeLDAP"/>
      <xs:element name="synchronizeLDAPResponse" type="tns:synchronizeLDAPResponse"/>
      <xs:element name="updateLocalGroupId" type="tns:updateLocalGroupId"/>
      <xs:element name="updateLocalGroupIdResponse" type="tns:updateLocalGroupIdResponse"/>
      <xs:complexType name="getAllUsersByGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByGroupResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="tns:openWISAddress"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="backUps" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="classOfService" type="tns:classOfService"/>
          <xs:element minOccurs="0" name="emailContact" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="emails" nillable="true" type="tns:openWISEmail"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ftps" nillable="true" type="tns:openWISFTP"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groups" nillable="true" type="tns:openWISGroup"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="needUserAccount" type="xs:boolean"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
          <xs:element minOccurs="0" name="profile" type="xs:string"/>
          <xs:element minOccurs="0" name="surName" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISAddress">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="city" type="xs:string"/>
          <xs:element minOccurs="0" name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
          <xs:element minOccurs="0" name="zip" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISEmail">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="disseminationTool" type="tns:disseminationTool"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element minOccurs="0" name="headerLine" type="xs:string"/>
          <xs:element minOccurs="0" name="mailAttachmentMode" type="xs:string"/>
          <xs:element minOccurs="0" name="mailDispatchMode" type="xs:string"/>
          <xs:element minOccurs="0" name="subject" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISFTP">
        <xs:sequence>
          <xs:element name="checkFileSize" type="xs:boolean"/>
          <xs:element minOccurs="0" name="disseminationTool" type="tns:disseminationTool"/>
          <xs:element name="encrypted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element minOccurs="0" name="host" type="xs:string"/>
          <xs:element name="passive" type="xs:boolean"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
          <xs:element minOccurs="0" name="port" type="xs:string"/>
          <xs:element minOccurs="0" name="user" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="centreName" type="xs:string"/>
          <xs:element name="global" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groupIds" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUserNameByGroups">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groups" type="tns:openWISGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUserNameByGroupsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByGlobalGroupIds">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="localGroupIds" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByGlobalGroupIdsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByLocalGroupId">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
          <xs:element minOccurs="0" name="localGroupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByLocalGroupIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByGlobalGroup">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getAllUsersByGlobalGroupResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="synchronizeLDAP">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="synchronizeLDAPResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLocalGroupId">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
          <xs:element minOccurs="0" name="localGroupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLocalGroupIdResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="removeGlobalGroup">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="removeGlobalGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="removeLocalGroupId">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
          <xs:element minOccurs="0" name="localGroupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeLocalGroupIdResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="removeLocalGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeLocalGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getAllGroups">
        <xs:sequence>
          <xs:element minOccurs="0" name="centreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllGroupsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUserNameByCentre">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUserNameByCentreResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByGlobalGroupId">
        <xs:sequence>
          <xs:element minOccurs="0" name="globalGroupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByGlobalGroupIdResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByGroups">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groups" type="tns:openWISGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUsersByGroupsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createGlobalGroupId">
        <xs:sequence>
          <xs:element minOccurs="0" name="globalGroupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createGlobalGroupIdResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="resetGroups">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="resetGroupsResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="removeGlobalGroupId">
        <xs:sequence>
          <xs:element minOccurs="0" name="globalGroupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeGlobalGroupIdResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createGlobalGroup">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createGlobalGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="updateLocalGroupId">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
          <xs:element minOccurs="0" name="oldLocalGroupId" type="xs:string"/>
          <xs:element minOccurs="0" name="newLocalGroupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateLocalGroupIdResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="createLocalGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="localCentreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createLocalGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="countUsersInGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="countUsersInGroupResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:int"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="classOfService">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SILVER"/>
          <xs:enumeration value="GOLD"/>
          <xs:enumeration value="BRONZE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="disseminationTool">
        <xs:restriction base="xs:string">
          <xs:enumeration value="RMDCN"/>
          <xs:enumeration value="PUBLIC"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="UserManagementException" type="tns:UserManagementException"/>
      <xs:complexType name="UserManagementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="removeGlobalGroupId">
    <wsdl:part element="tns:removeGlobalGroupId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createGlobalGroupResponse">
    <wsdl:part element="tns:createGlobalGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="countUsersInGroup">
    <wsdl:part element="tns:countUsersInGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGlobalGroupIdsResponse">
    <wsdl:part element="tns:getAllUsersByGlobalGroupIdsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLocalGroupIdResponse">
    <wsdl:part element="tns:updateLocalGroupIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeGlobalGroupIdResponse">
    <wsdl:part element="tns:removeGlobalGroupIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUserNameByCentre">
    <wsdl:part element="tns:getAllUserNameByCentre" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateLocalGroupId">
    <wsdl:part element="tns:updateLocalGroupId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGroups">
    <wsdl:part element="tns:getAllUsersByGroups" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="synchronizeLDAP">
    <wsdl:part element="tns:synchronizeLDAP" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createGlobalGroupIdResponse">
    <wsdl:part element="tns:createGlobalGroupIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGlobalGroupIdResponse">
    <wsdl:part element="tns:getAllUsersByGlobalGroupIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeLocalGroupResponse">
    <wsdl:part element="tns:removeLocalGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllGroupsResponse">
    <wsdl:part element="tns:getAllGroupsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGlobalGroupResponse">
    <wsdl:part element="tns:getAllUsersByGlobalGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGlobalGroup">
    <wsdl:part element="tns:getAllUsersByGlobalGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeLocalGroupId">
    <wsdl:part element="tns:removeLocalGroupId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByLocalGroupId">
    <wsdl:part element="tns:getAllUsersByLocalGroupId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeGlobalGroupResponse">
    <wsdl:part element="tns:removeGlobalGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLocalGroupResponse">
    <wsdl:part element="tns:createLocalGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="countUsersInGroupResponse">
    <wsdl:part element="tns:countUsersInGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetGroups">
    <wsdl:part element="tns:resetGroups" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createGlobalGroupId">
    <wsdl:part element="tns:createGlobalGroupId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGlobalGroupIds">
    <wsdl:part element="tns:getAllUsersByGlobalGroupIds" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGlobalGroupId">
    <wsdl:part element="tns:getAllUsersByGlobalGroupId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGroup">
    <wsdl:part element="tns:getAllUsersByGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="synchronizeLDAPResponse">
    <wsdl:part element="tns:synchronizeLDAPResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGroupsResponse">
    <wsdl:part element="tns:getAllUsersByGroupsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUserNameByGroupsResponse">
    <wsdl:part element="tns:getAllUserNameByGroupsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUserNameByCentreResponse">
    <wsdl:part element="tns:getAllUserNameByCentreResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createGlobalGroup">
    <wsdl:part element="tns:createGlobalGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllGroups">
    <wsdl:part element="tns:getAllGroups" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByLocalGroupIdResponse">
    <wsdl:part element="tns:getAllUsersByLocalGroupIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUserNameByGroups">
    <wsdl:part element="tns:getAllUserNameByGroups" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeGlobalGroup">
    <wsdl:part element="tns:removeGlobalGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeLocalGroup">
    <wsdl:part element="tns:removeLocalGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetGroupsResponse">
    <wsdl:part element="tns:resetGroupsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserManagementException">
    <wsdl:part element="tns:UserManagementException" name="UserManagementException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUsersByGroupResponse">
    <wsdl:part element="tns:getAllUsersByGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeLocalGroupIdResponse">
    <wsdl:part element="tns:removeLocalGroupIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLocalGroup">
    <wsdl:part element="tns:createLocalGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLocalGroupIdResponse">
    <wsdl:part element="tns:createLocalGroupIdResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createLocalGroupId">
    <wsdl:part element="tns:createLocalGroupId" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="GroupManagementService">
    <wsdl:operation name="getAllUsersByGroup">
      <wsdl:input message="tns:getAllUsersByGroup" name="getAllUsersByGroup"></wsdl:input>
      <wsdl:output message="tns:getAllUsersByGroupResponse" name="getAllUsersByGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserNameByGroups">
      <wsdl:input message="tns:getAllUserNameByGroups" name="getAllUserNameByGroups"></wsdl:input>
      <wsdl:output message="tns:getAllUserNameByGroupsResponse" name="getAllUserNameByGroupsResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByGlobalGroupIds">
      <wsdl:input message="tns:getAllUsersByGlobalGroupIds" name="getAllUsersByGlobalGroupIds"></wsdl:input>
      <wsdl:output message="tns:getAllUsersByGlobalGroupIdsResponse" name="getAllUsersByGlobalGroupIdsResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByLocalGroupId">
      <wsdl:input message="tns:getAllUsersByLocalGroupId" name="getAllUsersByLocalGroupId"></wsdl:input>
      <wsdl:output message="tns:getAllUsersByLocalGroupIdResponse" name="getAllUsersByLocalGroupIdResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByGlobalGroup">
      <wsdl:input message="tns:getAllUsersByGlobalGroup" name="getAllUsersByGlobalGroup"></wsdl:input>
      <wsdl:output message="tns:getAllUsersByGlobalGroupResponse" name="getAllUsersByGlobalGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="synchronizeLDAP">
      <wsdl:input message="tns:synchronizeLDAP" name="synchronizeLDAP"></wsdl:input>
      <wsdl:output message="tns:synchronizeLDAPResponse" name="synchronizeLDAPResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLocalGroupId">
      <wsdl:input message="tns:createLocalGroupId" name="createLocalGroupId"></wsdl:input>
      <wsdl:output message="tns:createLocalGroupIdResponse" name="createLocalGroupIdResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeGlobalGroup">
      <wsdl:input message="tns:removeGlobalGroup" name="removeGlobalGroup"></wsdl:input>
      <wsdl:output message="tns:removeGlobalGroupResponse" name="removeGlobalGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeLocalGroupId">
      <wsdl:input message="tns:removeLocalGroupId" name="removeLocalGroupId"></wsdl:input>
      <wsdl:output message="tns:removeLocalGroupIdResponse" name="removeLocalGroupIdResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeLocalGroup">
      <wsdl:input message="tns:removeLocalGroup" name="removeLocalGroup"></wsdl:input>
      <wsdl:output message="tns:removeLocalGroupResponse" name="removeLocalGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllGroups">
      <wsdl:input message="tns:getAllGroups" name="getAllGroups"></wsdl:input>
      <wsdl:output message="tns:getAllGroupsResponse" name="getAllGroupsResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserNameByCentre">
      <wsdl:input message="tns:getAllUserNameByCentre" name="getAllUserNameByCentre"></wsdl:input>
      <wsdl:output message="tns:getAllUserNameByCentreResponse" name="getAllUserNameByCentreResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByGlobalGroupId">
      <wsdl:input message="tns:getAllUsersByGlobalGroupId" name="getAllUsersByGlobalGroupId"></wsdl:input>
      <wsdl:output message="tns:getAllUsersByGlobalGroupIdResponse" name="getAllUsersByGlobalGroupIdResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByGroups">
      <wsdl:input message="tns:getAllUsersByGroups" name="getAllUsersByGroups"></wsdl:input>
      <wsdl:output message="tns:getAllUsersByGroupsResponse" name="getAllUsersByGroupsResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createGlobalGroupId">
      <wsdl:input message="tns:createGlobalGroupId" name="createGlobalGroupId"></wsdl:input>
      <wsdl:output message="tns:createGlobalGroupIdResponse" name="createGlobalGroupIdResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetGroups">
      <wsdl:input message="tns:resetGroups" name="resetGroups"></wsdl:input>
      <wsdl:output message="tns:resetGroupsResponse" name="resetGroupsResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeGlobalGroupId">
      <wsdl:input message="tns:removeGlobalGroupId" name="removeGlobalGroupId"></wsdl:input>
      <wsdl:output message="tns:removeGlobalGroupIdResponse" name="removeGlobalGroupIdResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createGlobalGroup">
      <wsdl:input message="tns:createGlobalGroup" name="createGlobalGroup"></wsdl:input>
      <wsdl:output message="tns:createGlobalGroupResponse" name="createGlobalGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLocalGroupId">
      <wsdl:input message="tns:updateLocalGroupId" name="updateLocalGroupId"></wsdl:input>
      <wsdl:output message="tns:updateLocalGroupIdResponse" name="updateLocalGroupIdResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLocalGroup">
      <wsdl:input message="tns:createLocalGroup" name="createLocalGroup"></wsdl:input>
      <wsdl:output message="tns:createLocalGroupResponse" name="createLocalGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="countUsersInGroup">
      <wsdl:input message="tns:countUsersInGroup" name="countUsersInGroup"></wsdl:input>
      <wsdl:output message="tns:countUsersInGroupResponse" name="countUsersInGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="GroupManagementServiceSoapBinding" type="tns:GroupManagementService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="getAllUserNameByGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUserNameByGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUserNameByGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUsersByGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUsersByGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByGlobalGroupIds">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUsersByGlobalGroupIds">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUsersByGlobalGroupIdsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByLocalGroupId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUsersByLocalGroupId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUsersByLocalGroupIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByGlobalGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUsersByGlobalGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUsersByGlobalGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLocalGroupId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createLocalGroupId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createLocalGroupIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="synchronizeLDAP">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="synchronizeLDAP">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="synchronizeLDAPResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeGlobalGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeGlobalGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeGlobalGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeLocalGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeLocalGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeLocalGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeLocalGroupId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeLocalGroupId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeLocalGroupIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByGlobalGroupId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUsersByGlobalGroupId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUsersByGlobalGroupIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserNameByCentre">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUserNameByCentre">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUserNameByCentreResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createGlobalGroupId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createGlobalGroupId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createGlobalGroupIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUsersByGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUsersByGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUsersByGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeGlobalGroupId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeGlobalGroupId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeGlobalGroupIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="resetGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="resetGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createGlobalGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createGlobalGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createGlobalGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateLocalGroupId">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateLocalGroupId">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateLocalGroupIdResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createLocalGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createLocalGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createLocalGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="countUsersInGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="countUsersInGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="countUsersInGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="GroupManagementService">
    <wsdl:port binding="tns:GroupManagementServiceSoapBinding" name="GroupManagementServicePort">
      <soap:address location="http://localhost:8080/openwis-securityservice/services/GroupManagementService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint></con:endpoints><con:operation id="8c3ae182-bb8a-4a43-a95f-0b90e24c5700" isOneWay="false" action="" name="createGlobalGroup" bindingOperationName="createGlobalGroup" type="Request-Response" outputName="createGlobalGroupResponse" inputName="createGlobalGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="400c97aa-112e-49e6-837d-be3652b86364" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:createGlobalGroup/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/createGlobalGroup"/></con:call></con:operation><con:operation id="967c7ea9-c927-4ab5-ae76-42ccd78a9b05" isOneWay="false" action="" name="createGlobalGroupId" bindingOperationName="createGlobalGroupId" type="Request-Response" outputName="createGlobalGroupIdResponse" inputName="createGlobalGroupId" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2c52cc1d-4562-48c2-bfb8-76e3cc447251" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:createGlobalGroupId>
         <!--Optional:-->
         <globalGroupId>?</globalGroupId>
      </sec:createGlobalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/createGlobalGroupId"/></con:call></con:operation><con:operation id="1833f8c1-0bb0-4ca7-8172-a56b9c70e104" isOneWay="false" action="" name="createLocalGroup" bindingOperationName="createLocalGroup" type="Request-Response" outputName="createLocalGroupResponse" inputName="createLocalGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5b310850-cd2f-435b-95f4-05d00e86fb70" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:createLocalGroup>
         <!--Optional:-->
         <localCentreGroupName>?</localCentreGroupName>
      </sec:createLocalGroup>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/createLocalGroup"/></con:call></con:operation><con:operation id="aceeca39-8ccd-405c-80a6-70c287e6e5a5" isOneWay="false" action="" name="createLocalGroupId" bindingOperationName="createLocalGroupId" type="Request-Response" outputName="createLocalGroupIdResponse" inputName="createLocalGroupId" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="5449fc85-9213-4c8d-8544-7fa945c4511d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:createLocalGroupId>
         <!--Optional:-->
         <localCentreGroupName>?</localCentreGroupName>
         <!--Optional:-->
         <localGroupId>?</localGroupId>
      </sec:createLocalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/createLocalGroupId"/></con:call></con:operation><con:operation id="49ca71d2-3fff-4836-9c22-5cdf76067d4e" isOneWay="false" action="" name="getAllGroups" bindingOperationName="getAllGroups" type="Request-Response" outputName="getAllGroupsResponse" inputName="getAllGroups" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8e61beef-5620-42fd-b499-ce84ad5f41dc" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllGroups>
         <!--Optional:-->
         <centreGroupName>?</centreGroupName>
      </sec:getAllGroups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllGroups"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="9aaef544-82f3-4f75-830a-0cb9bc6deb87" isOneWay="false" action="" name="getAllUserNameByCentre" bindingOperationName="getAllUserNameByCentre" type="Request-Response" outputName="getAllUserNameByCentreResponse" inputName="getAllUserNameByCentre" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="e86cf246-4457-4ba7-a252-1ff05864a48b" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUserNameByCentre>
         <!--Optional:-->
         <localCentreGroupName>toto</localCentreGroupName>
      </sec:getAllUserNameByCentre>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllUserNameByCentre"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="0bca16d8-7ea8-47a3-b3bd-e68150541076" isOneWay="false" action="" name="getAllUserNameByGroups" bindingOperationName="getAllUserNameByGroups" type="Request-Response" outputName="getAllUserNameByGroupsResponse" inputName="getAllUserNameByGroups" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="63856f9c-c06f-4ca3-b5dc-f029ef8442c3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUserNameByGroups>
         <!--Zero or more repetitions:-->
         <groups>
            <!--Optional:-->
            <centreName>?</centreName>
            <global>?</global>
            <!--Zero or more repetitions:-->
            <groupIds>?</groupIds>
         </groups>
      </sec:getAllUserNameByGroups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllUserNameByGroups"/></con:call></con:operation><con:operation id="6e22dc16-aa33-4b3b-9855-1d3d1828c1b2" isOneWay="false" action="" name="getAllUsersByGlobalGroup" bindingOperationName="getAllUsersByGlobalGroup" type="Request-Response" outputName="getAllUsersByGlobalGroupResponse" inputName="getAllUsersByGlobalGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d7e4a62a-85eb-41e3-9422-e316aae79b52" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUsersByGlobalGroup/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByGlobalGroup"/></con:call></con:operation><con:operation id="248b8d65-2597-4266-8c5f-e34fbdee0a00" isOneWay="false" action="" name="getAllUsersByGlobalGroupId" bindingOperationName="getAllUsersByGlobalGroupId" type="Request-Response" outputName="getAllUsersByGlobalGroupIdResponse" inputName="getAllUsersByGlobalGroupId" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="43ddd7a7-45eb-426e-bea9-6bbb2872492a" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUsersByGlobalGroupId>
         <!--Optional:-->
         <globalGroupId>?</globalGroupId>
      </sec:getAllUsersByGlobalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByGlobalGroupId"/></con:call></con:operation><con:operation id="acef5583-14ec-4970-8748-764576dde401" isOneWay="false" action="" name="getAllUsersByGroup" bindingOperationName="getAllUsersByGroup" type="Request-Response" outputName="getAllUsersByGroupResponse" inputName="getAllUsersByGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3afea667-42db-4845-96b8-fd1751c0404c" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUsersByGroup>
         <!--Optional:-->
         <localCentreGroupName>?</localCentreGroupName>
      </sec:getAllUsersByGroup>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByGroup"/></con:call></con:operation><con:operation id="995d5f6b-7480-4bb8-91cb-02b6cdb98745" isOneWay="false" action="" name="getAllUsersByGroups" bindingOperationName="getAllUsersByGroups" type="Request-Response" outputName="getAllUsersByGroupsResponse" inputName="getAllUsersByGroups" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="2e5bba68-32c5-4e0e-93b8-6c00e526a8b3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUsersByGroups>
         <!--Zero or more repetitions:-->
         <groups>
            <!--Optional:-->
            <centreName>?</centreName>
            <global>?</global>
            <!--Zero or more repetitions:-->
            <groupIds>?</groupIds>
         </groups>
      </sec:getAllUsersByGroups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByGroups"/></con:call></con:operation><con:operation id="736bbb84-9c46-4ec2-96d4-4498ca854133" isOneWay="false" action="" name="getAllUsersByLocalGroupId" bindingOperationName="getAllUsersByLocalGroupId" type="Request-Response" outputName="getAllUsersByLocalGroupIdResponse" inputName="getAllUsersByLocalGroupId" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="524a72c3-849f-4a43-967b-410142fcecac" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUsersByLocalGroupId>
         <!--Optional:-->
         <localCentreGroupName>?</localCentreGroupName>
         <!--Optional:-->
         <localGroupId>?</localGroupId>
      </sec:getAllUsersByLocalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByLocalGroupId"/></con:call></con:operation><con:operation id="3ab3e2b4-99f3-470f-aa30-08cb985efa87" isOneWay="false" action="" name="removeGlobalGroup" bindingOperationName="removeGlobalGroup" type="Request-Response" outputName="removeGlobalGroupResponse" inputName="removeGlobalGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="49be9874-7bc0-4f92-a831-d4b6ecf1e611" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeGlobalGroup/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/removeGlobalGroup"/></con:call></con:operation><con:operation id="b925a943-8f82-4904-914a-e03bf888dbe7" isOneWay="false" action="" name="removeGlobalGroupId" bindingOperationName="removeGlobalGroupId" type="Request-Response" outputName="removeGlobalGroupIdResponse" inputName="removeGlobalGroupId" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="060216ec-d992-48b0-825d-ce48cddb5292" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeGlobalGroupId>
         <!--Optional:-->
         <globalGroupId>?</globalGroupId>
      </sec:removeGlobalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/removeGlobalGroupId"/></con:call></con:operation><con:operation id="83798d35-2464-4fe3-9409-046d017b95ee" isOneWay="false" action="" name="removeLocalGroup" bindingOperationName="removeLocalGroup" type="Request-Response" outputName="removeLocalGroupResponse" inputName="removeLocalGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="8f54915d-ad24-4a99-931a-8ef3a26052d6" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeLocalGroup>
         <!--Optional:-->
         <localCentreGroupName>?</localCentreGroupName>
      </sec:removeLocalGroup>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/removeLocalGroup"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="2500fb6f-671e-426d-b790-f62450b0e3cb" isOneWay="false" action="" name="removeLocalGroupId" bindingOperationName="removeLocalGroupId" type="Request-Response" outputName="removeLocalGroupIdResponse" inputName="removeLocalGroupId" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="436144ef-c335-488d-929e-febbf37e5fc0" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeLocalGroupId>
         <!--Optional:-->
         <localCentreGroupName>?</localCentreGroupName>
         <!--Optional:-->
         <localGroupId>?</localGroupId>
      </sec:removeLocalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/removeLocalGroupId"/></con:call></con:operation><con:operation id="d81f8540-c5bd-4ba3-898d-3151f6092507" isOneWay="false" action="" name="resetGroups" bindingOperationName="resetGroups" type="Request-Response" outputName="resetGroupsResponse" inputName="resetGroups" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="ca1ca47a-135e-442f-9808-d7b4fa800728" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:resetGroups/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/resetGroups"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="340174a0-368a-4fa8-b094-247ccfba6e60" isOneWay="false" action="" name="synchronizeLDAP" bindingOperationName="synchronizeLDAP" type="Request-Response" outputName="synchronizeLDAPResponse" inputName="synchronizeLDAP" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f8713854-bbf2-4799-8da8-d9ac1ddcc176" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:synchronizeLDAP>
         <!--Optional:-->
         <localCentreGroupName>?</localCentreGroupName>
      </sec:synchronizeLDAP>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/synchronizeLDAP"/></con:call></con:operation><con:operation id="00307133-1572-43d8-a546-4789b548d1aa" isOneWay="false" action="" name="updateLocalGroupId" bindingOperationName="updateLocalGroupId" type="Request-Response" outputName="updateLocalGroupIdResponse" inputName="updateLocalGroupId" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fc8f7a47-4d75-4907-8fcd-a089ea679ed3" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:updateLocalGroupId>
         <!--Optional:-->
         <localCentreGroupName>?</localCentreGroupName>
         <!--Optional:-->
         <oldLocalGroupId>?</oldLocalGroupId>
         <!--Optional:-->
         <newLocalGroupId>?</newLocalGroupId>
      </sec:updateLocalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/updateLocalGroupId"/></con:call></con:operation><con:operation id="4b9fb0a8-0448-4039-bdc3-c2ef64d8d1e0" isOneWay="false" action="" name="getAllUsersByGlobalGroupIds" bindingOperationName="getAllUsersByGlobalGroupIds" type="Request-Response" outputName="getAllUsersByGlobalGroupIdsResponse" inputName="getAllUsersByGlobalGroupIds" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="74c614cd-bfc4-4789-8cd2-ac8c72b36946" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sec:getAllUsersByGlobalGroupIds>\r
         <!--Optional:-->\r
         <localCentreGroupName>?</localCentreGroupName>\r
         <!--Zero or more repetitions:-->\r
         <localGroupIds>?</localGroupIds>\r
      </sec:getAllUsersByGlobalGroupIds>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://securityservice.openwis.org/GroupManagementService/getAllUsersByGlobalGroupIds"/></con:call></con:operation><con:operation id="6df191f2-c826-493f-aea7-89fd691513e8" isOneWay="false" action="" name="countUsersInGroup" bindingOperationName="countUsersInGroup" type="Request-Response" outputName="countUsersInGroupResponse" inputName="countUsersInGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="3d733193-6725-4e0d-badf-98e4addf902b" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <sec:countUsersInGroup>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </sec:countUsersInGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://securityservice.openwis.org/GroupManagementService/countUsersInGroup"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="3a401a6a-6b65-47b5-90d4-96fd4e48ebe1" wsaVersion="NONE" name="UserManagementServiceSoapBinding" type="wsdl" bindingName="{http://securityservice.openwis.org/}UserManagementServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/openwis-securityservice/services/UserManagementService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/openwis-securityservice/services/UserManagementService?wsdl"><con:part><con:url>http://localhost:8080/openwis-securityservice/services/UserManagementService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="UserManagementService" targetNamespace="http://securityservice.openwis.org/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://securityservice.openwis.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema attributeFormDefault="unqualified" elementFormDefault="unqualified" targetNamespace="http://securityservice.openwis.org/" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="addUserToGlobalGroup" type="tns:addUserToGlobalGroup"/>
      <xs:element name="addUserToGlobalGroupResponse" type="tns:addUserToGlobalGroupResponse"/>
      <xs:element name="addUserToLocalGroup" type="tns:addUserToLocalGroup"/>
      <xs:element name="addUserToLocalGroupResponse" type="tns:addUserToLocalGroupResponse"/>
      <xs:element name="changePassword" type="tns:changePassword"/>
      <xs:element name="changePasswordResponse" type="tns:changePasswordResponse"/>
      <xs:element name="checkUserNameExists" type="tns:checkUserNameExists"/>
      <xs:element name="checkUserNameExistsResponse" type="tns:checkUserNameExistsResponse"/>
      <xs:element name="createUser" type="tns:createUser"/>
      <xs:element name="createUserResponse" type="tns:createUserResponse"/>
      <xs:element name="getAllUserByUserNameAndGroupsFilter" type="tns:getAllUserByUserNameAndGroupsFilter"/>
      <xs:element name="getAllUserByUserNameAndGroupsFilterResponse" type="tns:getAllUserByUserNameAndGroupsFilterResponse"/>
      <xs:element name="getAllUserByUserNameFilter" type="tns:getAllUserByUserNameFilter"/>
      <xs:element name="getAllUserByUserNameFilterResponse" type="tns:getAllUserByUserNameFilterResponse"/>
      <xs:element name="getImportUserList" type="tns:getImportUserList"/>
      <xs:element name="getImportUserListFilter" type="tns:getImportUserListFilter"/>
      <xs:element name="getImportUserListFilterResponse" type="tns:getImportUserListFilterResponse"/>
      <xs:element name="getImportUserListResponse" type="tns:getImportUserListResponse"/>
      <xs:element name="getUserGroups" type="tns:getUserGroups"/>
      <xs:element name="getUserGroupsResponse" type="tns:getUserGroupsResponse"/>
      <xs:element name="getUserInfo" type="tns:getUserInfo"/>
      <xs:element name="getUserInfoResponse" type="tns:getUserInfoResponse"/>
      <xs:element name="importUser" type="tns:importUser"/>
      <xs:element name="importUserResponse" type="tns:importUserResponse"/>
      <xs:element name="initialize" type="tns:initialize"/>
      <xs:element name="initializeResponse" type="tns:initializeResponse"/>
      <xs:element name="removeUser" type="tns:removeUser"/>
      <xs:element name="removeUserResponse" type="tns:removeUserResponse"/>
      <xs:element name="removeUserToGroup" type="tns:removeUserToGroup"/>
      <xs:element name="removeUserToGroupResponse" type="tns:removeUserToGroupResponse"/>
      <xs:element name="resetUsers" type="tns:resetUsers"/>
      <xs:element name="resetUsersResponse" type="tns:resetUsersResponse"/>
      <xs:element name="updateUser" type="tns:updateUser"/>
      <xs:element name="updateUserProfile" type="tns:updateUserProfile"/>
      <xs:element name="updateUserProfileResponse" type="tns:updateUserProfileResponse"/>
      <xs:element name="updateUserResponse" type="tns:updateUserResponse"/>
      <xs:element name="userIsMemberOfGroup" type="tns:userIsMemberOfGroup"/>
      <xs:element name="userIsMemberOfGroupResponse" type="tns:userIsMemberOfGroupResponse"/>
      <xs:complexType name="addUserToGlobalGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string"/>
          <xs:element minOccurs="0" name="groupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addUserToGlobalGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="importUser">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="userNames" type="xs:string"/>
          <xs:element minOccurs="0" name="centreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="importUserResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getUserGroups">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserGroupsResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="centreName" type="xs:string"/>
          <xs:element name="global" type="xs:boolean"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groupIds" nillable="true" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addUserToLocalGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string"/>
          <xs:element minOccurs="0" name="centreGroupName" type="xs:string"/>
          <xs:element minOccurs="0" name="groupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="addUserToLocalGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="resetUsers">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="resetUsersResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="removeUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="username" type="xs:string"/>
          <xs:element minOccurs="0" name="centre" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeUserResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="updateUserProfile">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string"/>
          <xs:element minOccurs="0" name="profile" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateUserProfileResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="checkUserNameExists">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="checkUserNameExistsResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="user" type="tns:openWISUser"/>
          <xs:element minOccurs="0" name="centreName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="tns:openWISAddress"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="backUps" nillable="true" type="xs:string"/>
          <xs:element minOccurs="0" name="classOfService" type="tns:classOfService"/>
          <xs:element minOccurs="0" name="emailContact" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="emails" nillable="true" type="tns:openWISEmail"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="ftps" nillable="true" type="tns:openWISFTP"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groups" nillable="true" type="tns:openWISGroup"/>
          <xs:element minOccurs="0" name="name" type="xs:string"/>
          <xs:element name="needUserAccount" type="xs:boolean"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
          <xs:element minOccurs="0" name="profile" type="xs:string"/>
          <xs:element minOccurs="0" name="surName" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISAddress">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="city" type="xs:string"/>
          <xs:element minOccurs="0" name="country" type="xs:string"/>
          <xs:element minOccurs="0" name="state" type="xs:string"/>
          <xs:element minOccurs="0" name="zip" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISEmail">
        <xs:sequence>
          <xs:element minOccurs="0" name="address" type="xs:string"/>
          <xs:element minOccurs="0" name="disseminationTool" type="tns:disseminationTool"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element minOccurs="0" name="headerLine" type="xs:string"/>
          <xs:element minOccurs="0" name="mailAttachmentMode" type="xs:string"/>
          <xs:element minOccurs="0" name="mailDispatchMode" type="xs:string"/>
          <xs:element minOccurs="0" name="subject" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="openWISFTP">
        <xs:sequence>
          <xs:element name="checkFileSize" type="xs:boolean"/>
          <xs:element minOccurs="0" name="disseminationTool" type="tns:disseminationTool"/>
          <xs:element name="encrypted" type="xs:boolean"/>
          <xs:element minOccurs="0" name="fileName" type="xs:string"/>
          <xs:element minOccurs="0" name="host" type="xs:string"/>
          <xs:element name="passive" type="xs:boolean"/>
          <xs:element minOccurs="0" name="password" type="xs:string"/>
          <xs:element minOccurs="0" name="path" type="xs:string"/>
          <xs:element minOccurs="0" name="port" type="xs:string"/>
          <xs:element minOccurs="0" name="user" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="createUserResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getAllUserByUserNameFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="userNameFilter" type="xs:string"/>
          <xs:element minOccurs="0" name="centreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUserByUserNameFilterResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changePassword">
        <xs:sequence>
          <xs:element minOccurs="0" name="arg0" type="xs:string"/>
          <xs:element minOccurs="0" name="arg1" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="changePasswordResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getImportUserList">
        <xs:sequence>
          <xs:element minOccurs="0" name="centreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getImportUserListResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userIsMemberOfGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="centreGroupName" type="xs:string"/>
          <xs:element minOccurs="0" name="groupId" type="xs:string"/>
          <xs:element minOccurs="0" name="userName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="userIsMemberOfGroupResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="initialize">
        <xs:sequence>
          <xs:element minOccurs="0" name="adminName" type="xs:string"/>
          <xs:element minOccurs="0" name="adminPassword" type="xs:string"/>
          <xs:element minOccurs="0" name="emailContact" type="xs:string"/>
          <xs:element minOccurs="0" name="centreName" type="xs:string"/>
          <xs:element minOccurs="0" name="firstName" type="xs:string"/>
          <xs:element minOccurs="0" name="lastName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="initializeResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="updateUser">
        <xs:sequence>
          <xs:element minOccurs="0" name="user" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="updateUserResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getAllUserByUserNameAndGroupsFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="userNameFilter" type="xs:string"/>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="groups" type="tns:openWISGroup"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getAllUserByUserNameAndGroupsFilterResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeUserToGroup">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string"/>
          <xs:element minOccurs="0" name="centreGroupName" type="xs:string"/>
          <xs:element minOccurs="0" name="groupId" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="removeUserToGroupResponse">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="getUserInfo">
        <xs:sequence>
          <xs:element minOccurs="0" name="userName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getUserInfoResponse">
        <xs:sequence>
          <xs:element minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getImportUserListFilter">
        <xs:sequence>
          <xs:element minOccurs="0" name="userFilter" type="xs:string"/>
          <xs:element minOccurs="0" name="centreGroupName" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
      <xs:complexType name="getImportUserListFilterResponse">
        <xs:sequence>
          <xs:element maxOccurs="unbounded" minOccurs="0" name="return" type="tns:openWISUser"/>
        </xs:sequence>
      </xs:complexType>
      <xs:simpleType name="classOfService">
        <xs:restriction base="xs:string">
          <xs:enumeration value="SILVER"/>
          <xs:enumeration value="GOLD"/>
          <xs:enumeration value="BRONZE"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:simpleType name="disseminationTool">
        <xs:restriction base="xs:string">
          <xs:enumeration value="RMDCN"/>
          <xs:enumeration value="PUBLIC"/>
        </xs:restriction>
      </xs:simpleType>
      <xs:element name="UserManagementException" type="tns:UserManagementException"/>
      <xs:complexType name="UserManagementException">
        <xs:sequence>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
          <xs:element minOccurs="0" name="message" type="xs:string"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="addUserToGlobalGroupResponse">
    <wsdl:part element="tns:addUserToGlobalGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="importUser">
    <wsdl:part element="tns:importUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUserResponse">
    <wsdl:part element="tns:removeUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToGlobalGroup">
    <wsdl:part element="tns:addUserToGlobalGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUserToGroup">
    <wsdl:part element="tns:removeUserToGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createUserResponse">
    <wsdl:part element="tns:createUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userIsMemberOfGroup">
    <wsdl:part element="tns:userIsMemberOfGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUserByUserNameFilterResponse">
    <wsdl:part element="tns:getAllUserByUserNameFilterResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="initializeResponse">
    <wsdl:part element="tns:initializeResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUserByUserNameFilter">
    <wsdl:part element="tns:getAllUserByUserNameFilter" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUserProfileResponse">
    <wsdl:part element="tns:updateUserProfileResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="initialize">
    <wsdl:part element="tns:initialize" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetUsersResponse">
    <wsdl:part element="tns:resetUsersResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkUserNameExists">
    <wsdl:part element="tns:checkUserNameExists" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUser">
    <wsdl:part element="tns:removeUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getImportUserList">
    <wsdl:part element="tns:getImportUserList" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserInfoResponse">
    <wsdl:part element="tns:getUserInfoResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getImportUserListResponse">
    <wsdl:part element="tns:getImportUserListResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToLocalGroupResponse">
    <wsdl:part element="tns:addUserToLocalGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUserProfile">
    <wsdl:part element="tns:updateUserProfile" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="removeUserToGroupResponse">
    <wsdl:part element="tns:removeUserToGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserInfo">
    <wsdl:part element="tns:getUserInfo" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="resetUsers">
    <wsdl:part element="tns:resetUsers" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getImportUserListFilter">
    <wsdl:part element="tns:getImportUserListFilter" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="addUserToLocalGroup">
    <wsdl:part element="tns:addUserToLocalGroup" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="createUser">
    <wsdl:part element="tns:createUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserGroups">
    <wsdl:part element="tns:getUserGroups" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUserResponse">
    <wsdl:part element="tns:updateUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="checkUserNameExistsResponse">
    <wsdl:part element="tns:checkUserNameExistsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getUserGroupsResponse">
    <wsdl:part element="tns:getUserGroupsResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="updateUser">
    <wsdl:part element="tns:updateUser" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="UserManagementException">
    <wsdl:part element="tns:UserManagementException" name="UserManagementException"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="changePassword">
    <wsdl:part element="tns:changePassword" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUserByUserNameAndGroupsFilter">
    <wsdl:part element="tns:getAllUserByUserNameAndGroupsFilter" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="importUserResponse">
    <wsdl:part element="tns:importUserResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="changePasswordResponse">
    <wsdl:part element="tns:changePasswordResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getAllUserByUserNameAndGroupsFilterResponse">
    <wsdl:part element="tns:getAllUserByUserNameAndGroupsFilterResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="userIsMemberOfGroupResponse">
    <wsdl:part element="tns:userIsMemberOfGroupResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="getImportUserListFilterResponse">
    <wsdl:part element="tns:getImportUserListFilterResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="UserManagementService">
    <wsdl:operation name="addUserToGlobalGroup">
      <wsdl:input message="tns:addUserToGlobalGroup" name="addUserToGlobalGroup"></wsdl:input>
      <wsdl:output message="tns:addUserToGlobalGroupResponse" name="addUserToGlobalGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importUser">
      <wsdl:input message="tns:importUser" name="importUser"></wsdl:input>
      <wsdl:output message="tns:importUserResponse" name="importUserResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserGroups">
      <wsdl:input message="tns:getUserGroups" name="getUserGroups"></wsdl:input>
      <wsdl:output message="tns:getUserGroupsResponse" name="getUserGroupsResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserToLocalGroup">
      <wsdl:input message="tns:addUserToLocalGroup" name="addUserToLocalGroup"></wsdl:input>
      <wsdl:output message="tns:addUserToLocalGroupResponse" name="addUserToLocalGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetUsers">
      <wsdl:input message="tns:resetUsers" name="resetUsers"></wsdl:input>
      <wsdl:output message="tns:resetUsersResponse" name="resetUsersResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUser">
      <wsdl:input message="tns:removeUser" name="removeUser"></wsdl:input>
      <wsdl:output message="tns:removeUserResponse" name="removeUserResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserProfile">
      <wsdl:input message="tns:updateUserProfile" name="updateUserProfile"></wsdl:input>
      <wsdl:output message="tns:updateUserProfileResponse" name="updateUserProfileResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkUserNameExists">
      <wsdl:input message="tns:checkUserNameExists" name="checkUserNameExists"></wsdl:input>
      <wsdl:output message="tns:checkUserNameExistsResponse" name="checkUserNameExistsResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUser">
      <wsdl:input message="tns:createUser" name="createUser"></wsdl:input>
      <wsdl:output message="tns:createUserResponse" name="createUserResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserByUserNameFilter">
      <wsdl:input message="tns:getAllUserByUserNameFilter" name="getAllUserByUserNameFilter"></wsdl:input>
      <wsdl:output message="tns:getAllUserByUserNameFilterResponse" name="getAllUserByUserNameFilterResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <wsdl:input message="tns:changePassword" name="changePassword"></wsdl:input>
      <wsdl:output message="tns:changePasswordResponse" name="changePasswordResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getImportUserList">
      <wsdl:input message="tns:getImportUserList" name="getImportUserList"></wsdl:input>
      <wsdl:output message="tns:getImportUserListResponse" name="getImportUserListResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="userIsMemberOfGroup">
      <wsdl:input message="tns:userIsMemberOfGroup" name="userIsMemberOfGroup"></wsdl:input>
      <wsdl:output message="tns:userIsMemberOfGroupResponse" name="userIsMemberOfGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="initialize">
      <wsdl:input message="tns:initialize" name="initialize"></wsdl:input>
      <wsdl:output message="tns:initializeResponse" name="initializeResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUser">
      <wsdl:input message="tns:updateUser" name="updateUser"></wsdl:input>
      <wsdl:output message="tns:updateUserResponse" name="updateUserResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserByUserNameAndGroupsFilter">
      <wsdl:input message="tns:getAllUserByUserNameAndGroupsFilter" name="getAllUserByUserNameAndGroupsFilter"></wsdl:input>
      <wsdl:output message="tns:getAllUserByUserNameAndGroupsFilterResponse" name="getAllUserByUserNameAndGroupsFilterResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUserToGroup">
      <wsdl:input message="tns:removeUserToGroup" name="removeUserToGroup"></wsdl:input>
      <wsdl:output message="tns:removeUserToGroupResponse" name="removeUserToGroupResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserInfo">
      <wsdl:input message="tns:getUserInfo" name="getUserInfo"></wsdl:input>
      <wsdl:output message="tns:getUserInfoResponse" name="getUserInfoResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getImportUserListFilter">
      <wsdl:input message="tns:getImportUserListFilter" name="getImportUserListFilter"></wsdl:input>
      <wsdl:output message="tns:getImportUserListFilterResponse" name="getImportUserListFilterResponse"></wsdl:output>
      <wsdl:fault message="tns:UserManagementException" name="UserManagementException"></wsdl:fault>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="UserManagementServiceSoapBinding" type="tns:UserManagementService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="addUserToGlobalGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addUserToGlobalGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addUserToGlobalGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserGroups">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserGroups">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserGroupsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="importUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="importUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="importUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="addUserToLocalGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="addUserToLocalGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="addUserToLocalGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="resetUsers">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="resetUsers">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="resetUsersResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUserProfile">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateUserProfile">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateUserProfileResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="checkUserNameExists">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="checkUserNameExists">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="checkUserNameExistsResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="createUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="createUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="createUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="changePassword">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="changePassword">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="changePasswordResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserByUserNameFilter">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUserByUserNameFilter">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUserByUserNameFilterResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getImportUserList">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getImportUserList">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getImportUserListResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="initialize">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="initialize">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="initializeResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="userIsMemberOfGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="userIsMemberOfGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="userIsMemberOfGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getAllUserByUserNameAndGroupsFilter">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getAllUserByUserNameAndGroupsFilter">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getAllUserByUserNameAndGroupsFilterResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="updateUser">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="updateUser">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="updateUserResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="removeUserToGroup">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="removeUserToGroup">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="removeUserToGroupResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getUserInfo">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getUserInfo">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getUserInfoResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
    <wsdl:operation name="getImportUserListFilter">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="getImportUserListFilter">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="getImportUserListFilterResponse">
        <soap:body use="literal"/>
      </wsdl:output>
      <wsdl:fault name="UserManagementException">
        <soap:fault name="UserManagementException" use="literal"/>
      </wsdl:fault>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="UserManagementService">
    <wsdl:port binding="tns:UserManagementServiceSoapBinding" name="UserManagementServicePort">
      <soap:address location="http://localhost:8080/openwis-securityservice/services/UserManagementService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint></con:endpoints><con:operation id="c6b26fad-1478-4752-adcc-175aa08d3cb1" isOneWay="false" action="" name="addUserToGlobalGroup" bindingOperationName="addUserToGlobalGroup" type="Request-Response" outputName="addUserToGlobalGroupResponse" inputName="addUserToGlobalGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b8fbaf89-40fa-4576-ae47-6f61dd534bac" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:addUserToGlobalGroup>
         <!--Optional:-->
         <userName>?</userName>
         <!--Optional:-->
         <groupId>?</groupId>
      </sec:addUserToGlobalGroup>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/addUserToGlobalGroup"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="5ba98ade-e198-4ac6-ab8a-e6d139155282" isOneWay="false" action="" name="addUserToLocalGroup" bindingOperationName="addUserToLocalGroup" type="Request-Response" outputName="addUserToLocalGroupResponse" inputName="addUserToLocalGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="09338882-cee2-4bda-bd2b-ed98fd6ee0ed" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:addUserToLocalGroup>
         <!--Optional:-->
         <userName>?</userName>
         <!--Optional:-->
         <centreGroupName>?</centreGroupName>
         <!--Optional:-->
         <groupId>?</groupId>
      </sec:addUserToLocalGroup>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/addUserToLocalGroup"/></con:call></con:operation><con:operation id="a29dc8ad-571e-4d9e-8c96-c56b981b24c0" isOneWay="false" action="" name="changePassword" bindingOperationName="changePassword" type="Request-Response" outputName="changePasswordResponse" inputName="changePassword" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4f3f0c42-44c5-4a33-b5a6-6fcc49ec6c23" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:changePassword>
         <!--Optional:-->
         <arg0>?</arg0>
         <!--Optional:-->
         <arg1>?</arg1>
      </sec:changePassword>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/changePassword"/></con:call></con:operation><con:operation id="dee8789f-a19e-46c4-a8e2-028fb89a944b" isOneWay="false" action="" name="checkUserNameExists" bindingOperationName="checkUserNameExists" type="Request-Response" outputName="checkUserNameExistsResponse" inputName="checkUserNameExists" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="96a00067-a486-4093-9be2-cbce872daa08" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:checkUserNameExists>
         <!--Optional:-->
         <userName>?</userName>
      </sec:checkUserNameExists>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/checkUserNameExists"/></con:call></con:operation><con:operation id="94384f9e-cc95-4a65-8e6d-8a0586918652" isOneWay="false" action="" name="createUser" bindingOperationName="createUser" type="Request-Response" outputName="createUserResponse" inputName="createUser" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="268c1a7b-c544-4c58-bdc5-4492d34c0f27" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:createUser>
         <!--Optional:-->
         <user>
            <!--Optional:-->
            <address>
               <!--Optional:-->
               <address>?</address>
               <!--Optional:-->
               <city>?</city>
               <!--Optional:-->
               <country>?</country>
               <!--Optional:-->
               <state>?</state>
               <!--Optional:-->
               <zip>?</zip>
            </address>
            <!--Zero or more repetitions:-->
            <backUps>?</backUps>
            <!--Optional:-->
            <classOfService>?</classOfService>
            <!--Optional:-->
            <emailContact>?</emailContact>
            <!--Zero or more repetitions:-->
            <emails>
               <!--Optional:-->
               <address>?</address>
               <!--Optional:-->
               <disseminationTool>?</disseminationTool>
               <!--Optional:-->
               <fileName>?</fileName>
               <!--Optional:-->
               <headerLine>?</headerLine>
               <!--Optional:-->
               <mailAttachmentMode>?</mailAttachmentMode>
               <!--Optional:-->
               <mailDispatchMode>?</mailDispatchMode>
               <!--Optional:-->
               <subject>?</subject>
            </emails>
            <!--Zero or more repetitions:-->
            <ftps>
               <checkFileSize>?</checkFileSize>
               <!--Optional:-->
               <disseminationTool>?</disseminationTool>
               <encrypted>?</encrypted>
               <!--Optional:-->
               <fileName>?</fileName>
               <!--Optional:-->
               <host>?</host>
               <passive>?</passive>
               <!--Optional:-->
               <password>?</password>
               <!--Optional:-->
               <path>?</path>
               <!--Optional:-->
               <port>?</port>
               <!--Optional:-->
               <user>?</user>
            </ftps>
            <!--Zero or more repetitions:-->
            <groups>
               <!--Optional:-->
               <centreName>?</centreName>
               <global>?</global>
               <!--Zero or more repetitions:-->
               <groupIds>?</groupIds>
            </groups>
            <!--Optional:-->
            <name>?</name>
            <needUserAccount>?</needUserAccount>
            <!--Optional:-->
            <password>?</password>
            <!--Optional:-->
            <profile>?</profile>
            <!--Optional:-->
            <surName>?</surName>
            <!--Optional:-->
            <userName>?</userName>
         </user>
         <!--Optional:-->
         <centreName>?</centreName>
      </sec:createUser>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/createUser"/></con:call></con:operation><con:operation id="65d55776-d5f5-4042-b9ad-250047cfe480" isOneWay="false" action="" name="getAllUserByUserNameAndGroupsFilter" bindingOperationName="getAllUserByUserNameAndGroupsFilter" type="Request-Response" outputName="getAllUserByUserNameAndGroupsFilterResponse" inputName="getAllUserByUserNameAndGroupsFilter" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fc246f43-a16e-49d1-887d-a8f5be60c703" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUserByUserNameAndGroupsFilter>
         <!--Optional:-->
         <userNameFilter>?</userNameFilter>
         <!--Zero or more repetitions:-->
         <groups>
            <!--Optional:-->
            <centreName>?</centreName>
            <global>?</global>
            <!--Zero or more repetitions:-->
            <groupIds>?</groupIds>
         </groups>
      </sec:getAllUserByUserNameAndGroupsFilter>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/getAllUserByUserNameAndGroupsFilter"/></con:call></con:operation><con:operation id="8b36b882-bc7d-449f-9245-d562d839b5e6" isOneWay="false" action="" name="getAllUserByUserNameFilter" bindingOperationName="getAllUserByUserNameFilter" type="Request-Response" outputName="getAllUserByUserNameFilterResponse" inputName="getAllUserByUserNameFilter" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="09112b26-529a-40cc-97cb-6e9cf5eb50d9" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUserByUserNameFilter>
         <!--Optional:-->
         <userNameFilter>*</userNameFilter>
         <!--Optional:-->
         <centreGroupName>GiscOpenam12Integration</centreGroupName>
      </sec:getAllUserByUserNameFilter>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/getAllUserByUserNameFilter"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="68c2a4af-1e01-4586-847c-6f502eb4f753" isOneWay="false" action="" name="getImportUserList" bindingOperationName="getImportUserList" type="Request-Response" outputName="getImportUserListResponse" inputName="getImportUserList" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="c01e5bd9-a296-4f9c-8947-2cf59185a8eb" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getImportUserList>
         <!--Optional:-->
         <centreGroupName>?</centreGroupName>
      </sec:getImportUserList>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/getImportUserList"/></con:call></con:operation><con:operation id="fd93818a-17fe-49aa-b58a-0e1f16f45ad4" isOneWay="false" action="" name="getImportUserListFilter" bindingOperationName="getImportUserListFilter" type="Request-Response" outputName="getImportUserListFilterResponse" inputName="getImportUserListFilter" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6e2f5072-227d-428f-be7c-d29b132f9524" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getImportUserListFilter>
         <!--Optional:-->
         <userFilter>?</userFilter>
         <!--Optional:-->
         <centreGroupName>?</centreGroupName>
      </sec:getImportUserListFilter>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/getImportUserListFilter"/></con:call></con:operation><con:operation id="275ee131-cd03-49f4-9b90-9546ff331d4a" isOneWay="false" action="" name="getUserGroups" bindingOperationName="getUserGroups" type="Request-Response" outputName="getUserGroupsResponse" inputName="getUserGroups" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="6c78526d-ad25-4fa6-bfcd-7b1649be9a1d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getUserGroups>
         <!--Optional:-->
         <username>?</username>
      </sec:getUserGroups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/getUserGroups"/></con:call></con:operation><con:operation id="cb01f161-e542-49d3-86de-e90109f9a73b" isOneWay="false" action="" name="getUserInfo" bindingOperationName="getUserInfo" type="Request-Response" outputName="getUserInfoResponse" inputName="getUserInfo" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="83637c4d-fb44-4fe8-929f-b361851df319" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getUserInfo>
         <!--Optional:-->
         <userName>yannick</userName>
      </sec:getUserInfo>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/getUserInfo"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="f8fad4ab-aab9-47ac-9633-6a23c247e955" isOneWay="false" action="" name="importUser" bindingOperationName="importUser" type="Request-Response" outputName="importUserResponse" inputName="importUser" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="72a759aa-8983-444e-9157-7304728c7716" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:importUser>
         <!--Zero or more repetitions:-->
         <userNames>?</userNames>
         <!--Optional:-->
         <centreGroupName>?</centreGroupName>
      </sec:importUser>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/importUser"/></con:call></con:operation><con:operation id="604d7bbe-9cc0-4833-87e4-7beffa437246" isOneWay="false" action="" name="initialize" bindingOperationName="initialize" type="Request-Response" outputName="initializeResponse" inputName="initialize" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="af433217-9a58-4bea-8e80-596a20311e70" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:initialize>
         <!--Optional:-->
         <adminName>admin1</adminName>
         <!--Optional:-->
         <adminPassword>admin1</adminPassword>
         <!--Optional:-->
         <emailContact>admin@toto.fr</emailContact>
         <!--Optional:-->
         <centreName>NEWcenter</centreName>
         <!--Optional:-->
         <firstName>admin</firstName>
         <!--Optional:-->
         <lastName>admin</lastName>
      </sec:initialize>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/initialize"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="b4af7ba3-78af-4554-af3b-8f0f72341c8c" isOneWay="false" action="" name="removeUser" bindingOperationName="removeUser" type="Request-Response" outputName="removeUserResponse" inputName="removeUser" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="d559b23c-9379-4ccc-9872-f1527a8175ba" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeUser>
         <!--Optional:-->
         <username>?</username>
         <!--Optional:-->
         <centre>?</centre>
      </sec:removeUser>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/removeUser"/></con:call></con:operation><con:operation id="9ed70a6e-6548-48b4-90f1-28b67c4d120d" isOneWay="false" action="" name="removeUserToGroup" bindingOperationName="removeUserToGroup" type="Request-Response" outputName="removeUserToGroupResponse" inputName="removeUserToGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b12322d7-67bd-4829-8852-60404fad6cf2" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeUserToGroup>
         <!--Optional:-->
         <userName>?</userName>
         <!--Optional:-->
         <centreGroupName>?</centreGroupName>
         <!--Optional:-->
         <groupId>?</groupId>
      </sec:removeUserToGroup>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/removeUserToGroup"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="e6767917-e5dd-46b5-982d-57f498491e27" isOneWay="false" action="" name="resetUsers" bindingOperationName="resetUsers" type="Request-Response" outputName="resetUsersResponse" inputName="resetUsers" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="f44ce3da-2128-4f9f-9fa1-70f8abb56894" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:resetUsers/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/resetUsers"/><con:wsrmConfig version="1.2"/></con:call></con:operation><con:operation id="ca32c0bf-197f-4dbc-8ac5-210cb79f0489" isOneWay="false" action="" name="updateUser" bindingOperationName="updateUser" type="Request-Response" outputName="updateUserResponse" inputName="updateUser" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="b46a9391-ef71-4a29-904d-f43f5866d943" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:updateUser>
         <!--Optional:-->
         <user>
            <!--Optional:-->
            <address>
               <!--Optional:-->
               <address>?</address>
               <!--Optional:-->
               <city>?</city>
               <!--Optional:-->
               <country>?</country>
               <!--Optional:-->
               <state>?</state>
               <!--Optional:-->
               <zip>?</zip>
            </address>
            <!--Zero or more repetitions:-->
            <backUps>?</backUps>
            <!--Optional:-->
            <classOfService>?</classOfService>
            <!--Optional:-->
            <emailContact>?</emailContact>
            <!--Zero or more repetitions:-->
            <emails>
               <!--Optional:-->
               <address>?</address>
               <!--Optional:-->
               <disseminationTool>?</disseminationTool>
               <!--Optional:-->
               <fileName>?</fileName>
               <!--Optional:-->
               <headerLine>?</headerLine>
               <!--Optional:-->
               <mailAttachmentMode>?</mailAttachmentMode>
               <!--Optional:-->
               <mailDispatchMode>?</mailDispatchMode>
               <!--Optional:-->
               <subject>?</subject>
            </emails>
            <!--Zero or more repetitions:-->
            <ftps>
               <checkFileSize>?</checkFileSize>
               <!--Optional:-->
               <disseminationTool>?</disseminationTool>
               <encrypted>?</encrypted>
               <!--Optional:-->
               <fileName>?</fileName>
               <!--Optional:-->
               <host>?</host>
               <passive>?</passive>
               <!--Optional:-->
               <password>?</password>
               <!--Optional:-->
               <path>?</path>
               <!--Optional:-->
               <port>?</port>
               <!--Optional:-->
               <user>?</user>
            </ftps>
            <!--Zero or more repetitions:-->
            <groups>
               <!--Optional:-->
               <centreName>?</centreName>
               <global>?</global>
               <!--Zero or more repetitions:-->
               <groupIds>?</groupIds>
            </groups>
            <!--Optional:-->
            <name>?</name>
            <needUserAccount>?</needUserAccount>
            <!--Optional:-->
            <password>?</password>
            <!--Optional:-->
            <profile>?</profile>
            <!--Optional:-->
            <surName>?</surName>
            <!--Optional:-->
            <userName>?</userName>
         </user>
      </sec:updateUser>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/updateUser"/></con:call></con:operation><con:operation id="a3d8b932-8dc3-450c-9615-84556fed3200" isOneWay="false" action="" name="updateUserProfile" bindingOperationName="updateUserProfile" type="Request-Response" outputName="updateUserProfileResponse" inputName="updateUserProfile" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="4bf43940-50ff-40b1-bf0d-5669386b3366" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:updateUserProfile>
         <!--Optional:-->
         <userName>?</userName>
         <!--Optional:-->
         <profile>?</profile>
      </sec:updateUserProfile>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/updateUserProfile"/></con:call></con:operation><con:operation id="4225ae88-1429-4421-9f24-2ac36bd8c84b" isOneWay="false" action="" name="userIsMemberOfGroup" bindingOperationName="userIsMemberOfGroup" type="Request-Response" outputName="userIsMemberOfGroupResponse" inputName="userIsMemberOfGroup" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="120105e4-84f9-4cde-985f-f66236ddea5d" name="Request 1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:userIsMemberOfGroup>
         <!--Optional:-->
         <centreGroupName>?</centreGroupName>
         <!--Optional:-->
         <groupId>?</groupId>
         <!--Optional:-->
         <userName>?</userName>
      </sec:userIsMemberOfGroup>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/userIsMemberOfGroup"/></con:call></con:operation></con:interface><con:interface xsi:type="con:WsdlInterface" id="1ce8240e-a6ea-473c-a3c4-688a9212fda2" wsaVersion="NONE" name="MonitoringServiceSoapBinding" type="wsdl" bindingName="{http://securityservice.openwis.org/}MonitoringServiceSoapBinding" soapVersion="1_1" anonymous="optional" definition="http://localhost:8080/openwis-securityservice/services/MonitoringService?wsdl" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:settings/><con:definitionCache type="TEXT" rootPart="http://localhost:8080/openwis-securityservice/services/MonitoringService?wsdl"><con:part><con:url>http://localhost:8080/openwis-securityservice/services/MonitoringService?wsdl</con:url><con:content><![CDATA[<wsdl:definitions name="MonitoringService" targetNamespace="http://securityservice.openwis.org/" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:wsdl="http://schemas.xmlsoap.org/wsdl/" xmlns:tns="http://securityservice.openwis.org/" xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/" xmlns:ns1="http://schemas.xmlsoap.org/soap/http">
  <wsdl:types>
    <xs:schema elementFormDefault="unqualified" targetNamespace="http://securityservice.openwis.org/" version="1.0" xmlns:xs="http://www.w3.org/2001/XMLSchema">
      <xs:element name="isSecurityServiceAvailable" type="tns:isSecurityServiceAvailable"/>
      <xs:element name="isSecurityServiceAvailableResponse" type="tns:isSecurityServiceAvailableResponse"/>
      <xs:complexType name="isSecurityServiceAvailable">
        <xs:sequence/>
      </xs:complexType>
      <xs:complexType name="isSecurityServiceAvailableResponse">
        <xs:sequence>
          <xs:element name="return" type="xs:boolean"/>
        </xs:sequence>
      </xs:complexType>
    </xs:schema>
  </wsdl:types>
  <wsdl:message name="isSecurityServiceAvailableResponse">
    <wsdl:part element="tns:isSecurityServiceAvailableResponse" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:message name="isSecurityServiceAvailable">
    <wsdl:part element="tns:isSecurityServiceAvailable" name="parameters"></wsdl:part>
  </wsdl:message>
  <wsdl:portType name="MonitoringService">
    <wsdl:operation name="isSecurityServiceAvailable">
      <wsdl:input message="tns:isSecurityServiceAvailable" name="isSecurityServiceAvailable"></wsdl:input>
      <wsdl:output message="tns:isSecurityServiceAvailableResponse" name="isSecurityServiceAvailableResponse"></wsdl:output>
    </wsdl:operation>
  </wsdl:portType>
  <wsdl:binding name="MonitoringServiceSoapBinding" type="tns:MonitoringService">
    <soap:binding style="document" transport="http://schemas.xmlsoap.org/soap/http"/>
    <wsdl:operation name="isSecurityServiceAvailable">
      <soap:operation soapAction="" style="document"/>
      <wsdl:input name="isSecurityServiceAvailable">
        <soap:body use="literal"/>
      </wsdl:input>
      <wsdl:output name="isSecurityServiceAvailableResponse">
        <soap:body use="literal"/>
      </wsdl:output>
    </wsdl:operation>
  </wsdl:binding>
  <wsdl:service name="MonitoringService">
    <wsdl:port binding="tns:MonitoringServiceSoapBinding" name="MonitoringServicePort">
      <soap:address location="http://localhost:8080/openwis-securityservice/services/MonitoringService"/>
    </wsdl:port>
  </wsdl:service>
</wsdl:definitions>]]></con:content><con:type>http://schemas.xmlsoap.org/wsdl/</con:type></con:part></con:definitionCache><con:endpoints><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/MonitoringService</con:endpoint></con:endpoints><con:operation id="6c8bcb92-7e86-4665-a590-cb2f496e9d89" isOneWay="false" action="" name="isSecurityServiceAvailable" bindingOperationName="isSecurityServiceAvailable" type="Request-Response" outputName="isSecurityServiceAvailableResponse" inputName="isSecurityServiceAvailable" receivesAttachments="false" sendsAttachments="false" anonymous="optional"><con:settings/><con:call id="fdebe9a5-c269-4622-9913-fabac02f99b1" name="Request 1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/MonitoringService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:isSecurityServiceAvailable/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/MonitoringService/isSecurityServiceAvailable"/><con:wsrmConfig version="1.2"/></con:call></con:operation></con:interface><con:testSuite id="e60ec366-852f-40a4-b3cd-830cdfb40398" name="DisseminationParametersServiceServiceSoapBinding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="102e596b-790d-4390-8709-8feac7077492" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addOrUpdateEmailForDisseminationParameters TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="c958a0a2-37b3-4410-be4c-41ed7ff11286" name="addOrUpdateEmailForDisseminationParameters"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DisseminationParametersServiceSoapBinding</con:interface><con:operation>addOrUpdateEmailForDisseminationParameters</con:operation><con:request name="addOrUpdateEmailForDisseminationParameters" id="3ea7285e-e081-48a7-b1d6-600e45bdc9ac"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:addOrUpdateEmailForDisseminationParameters>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>\r
            <!--Optional:-->\r
            <address>?</address>\r
            <!--Optional:-->\r
            <headerLine>?</headerLine>\r
            <!--Optional:-->\r
            <mailAttachmentMode>?</mailAttachmentMode>\r
            <!--Optional:-->\r
            <subject>?</subject>\r
            <!--Optional:-->\r
            <mailDispatchMode>?</mailDispatchMode>\r
            <!--Optional:-->\r
            <fileName>?</fileName>\r
            <!--Optional:-->\r
            <disseminationTool>?</disseminationTool>\r
         </arg1>\r
      </user:addOrUpdateEmailForDisseminationParameters>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/DisseminationParametersService/addOrUpdateEmailForDisseminationParameters" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="471c12cc-f501-4ba9-9ac9-02913f06dee6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addOrUpdateFTPForDisseminationParameters TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="db9d3cf6-3507-40e6-ae58-510f769fa9b1" name="addOrUpdateFTPForDisseminationParameters"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DisseminationParametersServiceSoapBinding</con:interface><con:operation>addOrUpdateFTPForDisseminationParameters</con:operation><con:request name="addOrUpdateFTPForDisseminationParameters" id="58f898dd-da73-4ad9-80c1-68434f4a38a0"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:addOrUpdateFTPForDisseminationParameters>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>\r
            <!--Optional:-->\r
            <host>?</host>\r
            <!--Optional:-->\r
            <path>?</path>\r
            <!--Optional:-->\r
            <user>?</user>\r
            <!--Optional:-->\r
            <password>?</password>\r
            <!--Optional:-->\r
            <port>?</port>\r
            <passive>?</passive>\r
            <encrypted>?</encrypted>\r
            <checkFileSize>?</checkFileSize>\r
            <!--Optional:-->\r
            <fileName>?</fileName>\r
            <!--Optional:-->\r
            <disseminationTool>?</disseminationTool>\r
         </arg1>\r
      </user:addOrUpdateFTPForDisseminationParameters>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/DisseminationParametersService/addOrUpdateFTPForDisseminationParameters"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="08805472-6f9b-4efb-9803-fcc9ee64ca80" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getEmailForDisseminationParameters TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="9e982d8b-0bd8-486b-bf74-574315f87e2a" name="getEmailForDisseminationParameters"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DisseminationParametersServiceSoapBinding</con:interface><con:operation>getEmailForDisseminationParameters</con:operation><con:request name="getEmailForDisseminationParameters" id="d149035e-3cac-4481-9238-6efb1cf696f3"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getEmailForDisseminationParameters>\r
         <!--Optional:-->\r
         <arg0>yannick</arg0>\r
      </user:getEmailForDisseminationParameters>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/DisseminationParametersService/getEmailForDisseminationParameters" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="31524ef8-1615-48d2-b72a-f35c205700b6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getFTPForDisseminationParameters TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="21c20887-f49c-4529-a951-7fd1b75f6883" name="getFTPForDisseminationParameters"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DisseminationParametersServiceSoapBinding</con:interface><con:operation>getFTPForDisseminationParameters</con:operation><con:request name="getFTPForDisseminationParameters" id="950f3291-83f1-4876-8041-f3e166487743"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getFTPForDisseminationParameters>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </user:getFTPForDisseminationParameters>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/DisseminationParametersService/getFTPForDisseminationParameters"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="c2226a10-455d-4e84-87c8-da757deded25" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="removeEmailForDisseminationParameters TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="0ad87215-b14d-47b2-b8e7-73f9b1dc089e" name="removeEmailForDisseminationParameters"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DisseminationParametersServiceSoapBinding</con:interface><con:operation>removeEmailForDisseminationParameters</con:operation><con:request name="removeEmailForDisseminationParameters" id="32552655-2b2a-4c7c-a208-dd8c81cbce4d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:removeEmailForDisseminationParameters>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>\r
            <!--Optional:-->\r
            <address>?</address>\r
            <!--Optional:-->\r
            <headerLine>?</headerLine>\r
            <!--Optional:-->\r
            <mailAttachmentMode>?</mailAttachmentMode>\r
            <!--Optional:-->\r
            <subject>?</subject>\r
            <!--Optional:-->\r
            <mailDispatchMode>?</mailDispatchMode>\r
            <!--Optional:-->\r
            <fileName>?</fileName>\r
            <!--Optional:-->\r
            <disseminationTool>?</disseminationTool>\r
         </arg1>\r
      </user:removeEmailForDisseminationParameters>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/DisseminationParametersService/removeEmailForDisseminationParameters"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f7c82fec-0326-41cd-82a2-2da341162031" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="removeFTPForDisseminationParameters TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="474ef928-591f-4433-8109-6fdc3321f532" name="removeFTPForDisseminationParameters"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>DisseminationParametersServiceSoapBinding</con:interface><con:operation>removeFTPForDisseminationParameters</con:operation><con:request name="removeFTPForDisseminationParameters" id="5eaa6baf-40af-4850-b2c5-71c4f88a90a4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/DisseminationParametersService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:removeFTPForDisseminationParameters>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>\r
            <!--Optional:-->\r
            <host>?</host>\r
            <!--Optional:-->\r
            <path>?</path>\r
            <!--Optional:-->\r
            <user>?</user>\r
            <!--Optional:-->\r
            <password>?</password>\r
            <!--Optional:-->\r
            <port>?</port>\r
            <passive>?</passive>\r
            <encrypted>?</encrypted>\r
            <checkFileSize>?</checkFileSize>\r
            <!--Optional:-->\r
            <fileName>?</fileName>\r
            <!--Optional:-->\r
            <disseminationTool>?</disseminationTool>\r
         </arg1>\r
      </user:removeFTPForDisseminationParameters>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/DisseminationParametersService/removeFTPForDisseminationParameters"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="8316c11b-2371-41be-b70d-1358865a83e7" name="GroupManagementServiceServiceSoapBinding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="c66183c5-b53c-4645-b591-47d767e710c6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createGlobalGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="b8a45c42-0025-43bd-a48b-f208eeda3149" name="createGlobalGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>createGlobalGroup</con:operation><con:request name="createGlobalGroup" id="16a16abc-9542-4680-88e0-8b2ff7af5d4c"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:createGlobalGroup/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/createGlobalGroup"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5128268c-1ed5-4c56-8940-7544cf779ccc" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createGlobalGroupId TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="891b1032-aa49-4d83-a335-7437eca666c5" name="createGlobalGroupId"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>createGlobalGroupId</con:operation><con:request name="createGlobalGroupId" id="ec78fa2a-37cc-4ad8-8977-a17d1b598a49"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:createGlobalGroupId>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </user:createGlobalGroupId>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/createGlobalGroupId"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e2aab5d6-dc23-4730-a9a1-afe57bb1b9f6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createLocalGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="3c7c7ed0-ac58-4133-9ea7-c58dc15bfee0" name="createLocalGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>createLocalGroup</con:operation><con:request name="createLocalGroup" id="a1b8ed2b-32c0-49eb-947b-1dd8818e4288"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:createLocalGroup>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </user:createLocalGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/createLocalGroup"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4ec6db9c-a249-45c1-b9b7-edc7ea544f28" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createLocalGroupId TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="2888a90b-778e-4175-8298-3c46117295e2" name="createLocalGroupId"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>createLocalGroupId</con:operation><con:request name="createLocalGroupId" id="722d967a-b235-4b3c-9616-ef90bae11430"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:createLocalGroupId>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:createLocalGroupId>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/createLocalGroupId"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5304d8a6-e40f-4964-8560-5bfc0aa625d8" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllGroups TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="30ff40d0-317a-41b8-9d0a-f594b6b2cfd7" name="getAllGroups"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllGroups</con:operation><con:request name="getAllGroups" id="d3a072f2-3550-4aeb-8b82-94185d993683"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllGroups>\r
         <!--Optional:-->\r
         <arg0>GISCAkka</arg0>\r
      </user:getAllGroups>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/getAllGroups" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="932eb18a-3d98-4c70-9a48-5d78d69a5262" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllUserNameByCentre TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="d0cef9d7-1af8-4daa-91c4-5693fa246acb" name="getAllUserNameByCentre"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllUserNameByCentre</con:operation><con:request name="getAllUserNameByCentre" id="5d471cdc-37f5-4cbe-afc1-f59e628c4af9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllUserNameByCentre>\r
         <!--Optional:-->\r
         <arg0>GiscAKKA</arg0>\r
      </user:getAllUserNameByCentre>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/getAllUserNameByCentre" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5103ec57-9386-4cc9-ac6b-33f719bb0c02" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllUserNameByGroups TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="aa7e7e94-ee97-4917-b3da-003d526aa9b4" name="getAllUserNameByGroups"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllUserNameByGroups</con:operation><con:request name="getAllUserNameByGroups" id="be5b3f32-449c-4d34-bb9a-75c0c441e4fb"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllUserNameByGroups>\r
         <!--Zero or more repetitions:-->\r
         <arg0>\r
            <isGlobal>?</isGlobal>\r
            <!--Optional:-->\r
            <centreName>?</centreName>\r
            <!--Zero or more repetitions:-->\r
            <groupIds>?</groupIds>\r
         </arg0>\r
      </user:getAllUserNameByGroups>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/getAllUserNameByGroups"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="bc5d3fb9-8794-4c6f-b365-c7a25bc5aac0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllUsersByGlobalGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="fcbaac78-9699-440c-9137-2e3b1d7db63d" name="getAllUsersByGlobalGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllUsersByGlobalGroup</con:operation><con:request name="getAllUsersByGlobalGroup" id="52202cf3-94a0-4dec-9397-bb740ec7e584"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllUsersByGlobalGroup/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByGlobalGroup"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f2a3243e-7048-4a49-8ca2-63bb98d6d16b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllUsersByGlobalGroupId TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="7b3f96f2-1dd2-4eb0-9bd5-9552106bee62" name="getAllUsersByGlobalGroupId"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllUsersByGlobalGroupId</con:operation><con:request name="getAllUsersByGlobalGroupId" id="044d09d2-d83a-4532-b432-a1c092bcfcc9"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllUsersByGlobalGroupId>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </user:getAllUsersByGlobalGroupId>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByGlobalGroupId"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="31f90c39-c075-458c-a7cc-1195abbaa01b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllUsersByGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="7830fd05-f2ed-4f6e-93a5-811e0b05a7c4" name="getAllUsersByGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllUsersByGroup</con:operation><con:request name="getAllUsersByGroup" id="388c4451-e60b-4b2f-bb0e-1c116fecf3b1"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllUsersByGroup>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </user:getAllUsersByGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByGroup"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5bf45f73-976a-404c-8e25-22d7691d5e0d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllUsersByGroups TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="aeff8e8a-ba41-4867-9f14-8b6ab0e90f10" name="getAllUsersByGroups"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllUsersByGroups</con:operation><con:request name="getAllUsersByGroups" id="39c4418f-dc3d-4623-9a4c-d1115b2a4399"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllUsersByGroups>\r
         <!--Zero or more repetitions:-->\r
         <arg0>\r
            <isGlobal>?</isGlobal>\r
            <!--Optional:-->\r
            <centreName>?</centreName>\r
            <!--Zero or more repetitions:-->\r
            <groupIds>?</groupIds>\r
         </arg0>\r
      </user:getAllUsersByGroups>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByGroups"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="63481a71-522a-4a8a-a991-08e28cded21d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllUsersByLocalGroupId TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="09ee8e5c-2196-4301-8cc8-2577c2d37342" name="getAllUsersByLocalGroupId"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllUsersByLocalGroupId</con:operation><con:request name="getAllUsersByLocalGroupId" id="596f06da-73fe-46c7-9dd0-e5114f4d7afe"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllUsersByLocalGroupId>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:getAllUsersByLocalGroupId>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByLocalGroupId"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="183614b3-2d23-4069-a371-2c54fea58bb1" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="removeGlobalGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="dd01a4c8-e2c4-4df2-80c4-a06e3f8634fe" name="removeGlobalGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>removeGlobalGroup</con:operation><con:request name="removeGlobalGroup" id="64119584-6431-4bf3-99c3-a9f275763c62"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:removeGlobalGroup/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/removeGlobalGroup"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1393f947-af30-4d55-aa8d-37874883f45f" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="removeGlobalGroupId TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="a9cdfb67-403c-4434-8c32-871dbbff2439" name="removeGlobalGroupId"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>removeGlobalGroupId</con:operation><con:request name="removeGlobalGroupId" id="358166d0-cc1b-4303-9bd0-fe6a50654e76"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:removeGlobalGroupId>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </user:removeGlobalGroupId>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/removeGlobalGroupId"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7c56d45f-075e-40d5-9a23-fe7218cd028e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="removeLocalGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="3e5f2679-79f3-473f-a61a-ddb1cef3d883" name="removeLocalGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>removeLocalGroup</con:operation><con:request name="removeLocalGroup" id="62aa2660-c6c2-4bcc-86d7-3c35479a478d"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:removeLocalGroup>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </user:removeLocalGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/removeLocalGroup"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="1f2b0e89-3506-4a4e-90f7-72da8b9fd321" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="removeLocalGroupId TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="b450ae41-36de-4a2e-9a07-192c1127ed57" name="removeLocalGroupId"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>removeLocalGroupId</con:operation><con:request name="removeLocalGroupId" id="7b365ad2-b857-4e26-a6e9-e416c12e0eb7"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:removeLocalGroupId>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:removeLocalGroupId>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/removeLocalGroupId"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="a11fe295-6b3f-4c60-8c6e-7d39d85df341" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="resetGroups TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="ef0734c2-43ed-48cf-be66-e4b8b50d9bb9" name="resetGroups"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>resetGroups</con:operation><con:request name="resetGroups" id="27b081a7-1c0c-42ba-9d0e-e0592b52a108"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:resetGroups/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/resetGroups"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d7dab550-00f2-4042-9104-05414c4f880a" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="synchronizeLDAP TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="24295b35-7de3-464d-92b5-274866c61c02" name="synchronizeLDAP"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>synchronizeLDAP</con:operation><con:request name="synchronizeLDAP" id="6fc9ac7d-78ec-48f9-8225-fd61eeef505e"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:synchronizeLDAP>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </user:synchronizeLDAP>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/synchronizeLDAP"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="153bbe42-1fa5-4cdb-9838-d218b9cb7582" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="updateLocalGroupId TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="41f05f36-bb5d-4376-a8e4-baa4c769369f" name="updateLocalGroupId"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>updateLocalGroupId</con:operation><con:request name="updateLocalGroupId" id="643ddb60-8d43-4a77-b5b9-b920a0df4911"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:updateLocalGroupId>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
         <!--Optional:-->\r
         <arg2>?</arg2>\r
      </user:updateLocalGroupId>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/GroupManagementService/updateLocalGroupId"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="6bba2ef1-44b4-48cc-a30b-b5cb6628025a" name="UserManagementServiceServiceSoapBinding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="24b9fa5e-deb6-4fad-9f8b-d2b882b5dbfd" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addUserToGlobalGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="e52a0d8b-8725-46b2-88bd-cbd317059ba5" name="addUserToGlobalGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>addUserToGlobalGroup</con:operation><con:request name="addUserToGlobalGroup" id="0e7809f2-81bb-4933-a2cd-af725b7c6cc4"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:addUserToGlobalGroup>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:addUserToGlobalGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/addUserToGlobalGroup" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="ed40ad71-136f-445c-a721-c73dc6ddd1a5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="addUserToLocalGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="aa2c023a-e113-47de-b886-b8e1ec279b30" name="addUserToLocalGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>addUserToLocalGroup</con:operation><con:request name="addUserToLocalGroup" id="7122c153-0337-4842-94cb-74994abeee85"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:addUserToLocalGroup>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
         <!--Optional:-->\r
         <arg2>?</arg2>\r
      </user:addUserToLocalGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/addUserToLocalGroup"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9255e598-33e7-45a2-a9e0-51a99bcf1018" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="changePassword TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="3071463d-43cd-4e00-a991-c72a6d70fa41" name="changePassword"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>changePassword</con:operation><con:request name="changePassword" id="e24cae2d-6980-4dce-b577-e2dd6977ca37"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:changePassword>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:changePassword>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/changePassword"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7ca12c18-38bb-437e-b488-e861986a50f7" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="checkUserNameExists TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="98920999-f93f-4096-bb76-db23dd1abaa4" name="checkUserNameExists"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>checkUserNameExists</con:operation><con:request name="checkUserNameExists" id="d3780c51-8ca9-46d9-9936-6485dcda64a2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:checkUserNameExists>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
      </user:checkUserNameExists>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/checkUserNameExists"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f8703f02-9604-4d94-ae20-1102414489d0" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="createUser TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="56018921-583c-4065-9d0a-4c0ee04aeb4b" name="createUser"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>createUser</con:operation><con:request name="createUser" id="f56bf2c0-ddeb-43dc-94fd-33ce3cfd818f"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:createUser>\r
         <!--Optional:-->\r
         <arg0>\r
            <!--Optional:-->\r
            <name>?</name>\r
            <!--Optional:-->\r
            <userName>?</userName>\r
            <!--Optional:-->\r
            <surName>?</surName>\r
            <!--Optional:-->\r
            <password>?</password>\r
            <!--Optional:-->\r
            <emailContact>?</emailContact>\r
            <!--Zero or more repetitions:-->\r
            <emails>\r
               <!--Optional:-->\r
               <address>?</address>\r
               <!--Optional:-->\r
               <headerLine>?</headerLine>\r
               <!--Optional:-->\r
               <mailAttachmentMode>?</mailAttachmentMode>\r
               <!--Optional:-->\r
               <subject>?</subject>\r
               <!--Optional:-->\r
               <mailDispatchMode>?</mailDispatchMode>\r
               <!--Optional:-->\r
               <fileName>?</fileName>\r
               <!--Optional:-->\r
               <disseminationTool>?</disseminationTool>\r
            </emails>\r
            <!--Zero or more repetitions:-->\r
            <ftps>\r
               <!--Optional:-->\r
               <host>?</host>\r
               <!--Optional:-->\r
               <path>?</path>\r
               <!--Optional:-->\r
               <user>?</user>\r
               <!--Optional:-->\r
               <password>?</password>\r
               <!--Optional:-->\r
               <port>?</port>\r
               <passive>?</passive>\r
               <encrypted>?</encrypted>\r
               <checkFileSize>?</checkFileSize>\r
               <!--Optional:-->\r
               <fileName>?</fileName>\r
               <!--Optional:-->\r
               <disseminationTool>?</disseminationTool>\r
            </ftps>\r
            <!--Optional:-->\r
            <address>\r
               <!--Optional:-->\r
               <address>?</address>\r
               <!--Optional:-->\r
               <city>?</city>\r
               <!--Optional:-->\r
               <country>?</country>\r
               <!--Optional:-->\r
               <state>?</state>\r
               <!--Optional:-->\r
               <zip>?</zip>\r
            </address>\r
            <needUserAccount>?</needUserAccount>\r
            <!--Optional:-->\r
            <profile>?</profile>\r
            <!--Optional:-->\r
            <classOfService>?</classOfService>\r
            <!--Zero or more repetitions:-->\r
            <backUps>?</backUps>\r
            <!--Zero or more repetitions:-->\r
            <groups>\r
               <isGlobal>?</isGlobal>\r
               <!--Optional:-->\r
               <centreName>?</centreName>\r
               <!--Zero or more repetitions:-->\r
               <groupIds>?</groupIds>\r
            </groups>\r
         </arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:createUser>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/createUser"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="7c12cf1c-6be6-4705-987b-327a41a54457" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllUserByUserNameAndGroupsFilter TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="42489943-7db9-47e5-a80b-61a14d465101" name="getAllUserByUserNameAndGroupsFilter"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>getAllUserByUserNameAndGroupsFilter</con:operation><con:request name="getAllUserByUserNameAndGroupsFilter" id="412540b1-1e9f-4acc-9b37-cebc40e38d07"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllUserByUserNameAndGroupsFilter>\r
         
         <arg0>*</arg0>\r
         
      </user:getAllUserByUserNameAndGroupsFilter>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/getAllUserByUserNameAndGroupsFilter" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="25e4ee90-8e9c-4139-a077-f1c03bdcaa32" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getAllUserByUserNameFilter TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="db7de178-4298-4f59-9f5a-a6c6cee7f27e" name="getAllUserByUserNameFilter"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>getAllUserByUserNameFilter</con:operation><con:request name="getAllUserByUserNameFilter" id="b7214411-18cc-4558-86fd-abba9e7846da"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getAllUserByUserNameFilter>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:getAllUserByUserNameFilter>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/getAllUserByUserNameFilter"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="373ecffb-147a-4172-9884-4e55a747df51" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getImportUserList TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="9f1ac67c-7b21-4fcc-a431-16448f944996" name="getImportUserList"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>getImportUserList</con:operation><con:request name="getImportUserList" id="0c48e0ad-4efb-448a-bdec-82718c6ad3c2"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getImportUserList>\r
         <!--Optional:-->\r
         <arg0>GiscAkk</arg0>\r
      </user:getImportUserList>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/getImportUserList" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e7b21f5b-dcfa-4516-90a0-fdad81a998a9" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getImportUserListFilter TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="615cccb3-8f1a-460e-9957-aa8595b0bb6c" name="getImportUserListFilter"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>getImportUserListFilter</con:operation><con:request name="getImportUserListFilter" id="d2a54544-651c-4416-ace5-73516bc30d50"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getImportUserListFilter>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:getImportUserListFilter>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/getImportUserListFilter"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e3d1f975-2006-4fb1-9e83-6ab1d009ea87" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUserGroups TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="8ec4d1b8-224c-4cda-9e0d-91d53e20c031" name="getUserGroups"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>getUserGroups</con:operation><con:request name="getUserGroups" id="307876e6-4bbc-4130-a660-62fc8c3d9f9c"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getUserGroups>\r
         <!--Optional:-->\r
         <username>editor</username>\r
      </user:getUserGroups>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/getUserGroups" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="9135781b-fc9a-46a3-b435-7ad86bf9a46d" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="getUserInfo TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="753c2f01-ed75-41d8-bbfe-f2eb187bd510" name="getUserInfo"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>getUserInfo</con:operation><con:request name="getUserInfo" id="29870bba-f2e1-4029-98d4-02f7619b7dc9"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:getUserInfo>\r
         <!--Optional:-->\r
         <arg0>yannick</arg0>\r
      </user:getUserInfo>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/getUserInfo" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="e6de2562-80f7-4a94-a7b5-6456fd50e84e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="importUser TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="7e0098a9-3914-4603-b193-0df15f036546" name="importUser"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>importUser</con:operation><con:request name="importUser" id="d07c6499-dabd-4dd0-812a-39cbf1d60918"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:importUser>\r
         <!--Zero or more repetitions:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:importUser>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/importUser"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="6d234dd1-57f5-44c4-b4fa-d9d4291b74a5" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="initialize TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="38bf593d-0394-4cc2-bafb-75bb4bfc009b" name="initialize"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>initialize</con:operation><con:request name="initialize" id="1d851d9d-8930-442a-9841-a92a72bcdce2"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:initialize>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
         <!--Optional:-->\r
         <arg2>?</arg2>\r
         <!--Optional:-->\r
         <arg3>?</arg3>\r
         <!--Optional:-->\r
         <arg4>?</arg4>\r
         <!--Optional:-->\r
         <arg5>?</arg5>\r
      </user:initialize>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/initialize"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="52826cfc-dfbb-43b2-bd5f-888e63fc293b" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="removeUser TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="22f9c240-68be-4bb5-bd63-6cf9c46af369" name="removeUser"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>removeUser</con:operation><con:request name="removeUser" id="bcbc6dda-d282-4356-9e7a-61a04e4fcc9a"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:removeUser>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:removeUser>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/removeUser"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="5778a45c-d39d-4ff0-b173-235e7f10cf90" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="removeUserToGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="f1ea9562-448b-4a45-8349-d941513cac7e" name="removeUserToGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>removeUserToGroup</con:operation><con:request name="removeUserToGroup" id="0abb61eb-c37e-4349-8205-036762be828b"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:removeUserToGroup>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
         <!--Optional:-->\r
         <arg2>?</arg2>\r
      </user:removeUserToGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/removeUserToGroup"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="83f6c42f-809d-419a-81fd-64c87edd44e3" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="resetUsers TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="3ac972e9-d800-4bf0-963a-174e4340a42b" name="resetUsers"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>resetUsers</con:operation><con:request name="resetUsers" id="ee2c56ed-b3d8-4f8e-a06b-a44cc26e65fc"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:resetUsers/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/resetUsers"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="2a09a0bc-a955-4559-8263-b186157644b6" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="updateUser TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="be6956f9-b253-4b49-a6c7-75976277cd9f" name="updateUser"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>updateUser</con:operation><con:request name="updateUser" id="5c51cc8a-bf04-42b3-bc66-022ac2df68eb"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:updateUser>\r
         <!--Optional:-->\r
         <arg0>\r
            <!--Optional:-->\r
            <name>?</name>\r
            <!--Optional:-->\r
            <userName>?</userName>\r
            <!--Optional:-->\r
            <surName>?</surName>\r
            <!--Optional:-->\r
            <password>?</password>\r
            <!--Optional:-->\r
            <emailContact>?</emailContact>\r
            <!--Zero or more repetitions:-->\r
            <emails>\r
               <!--Optional:-->\r
               <address>?</address>\r
               <!--Optional:-->\r
               <headerLine>?</headerLine>\r
               <!--Optional:-->\r
               <mailAttachmentMode>?</mailAttachmentMode>\r
               <!--Optional:-->\r
               <subject>?</subject>\r
               <!--Optional:-->\r
               <mailDispatchMode>?</mailDispatchMode>\r
               <!--Optional:-->\r
               <fileName>?</fileName>\r
               <!--Optional:-->\r
               <disseminationTool>?</disseminationTool>\r
            </emails>\r
            <!--Zero or more repetitions:-->\r
            <ftps>\r
               <!--Optional:-->\r
               <host>?</host>\r
               <!--Optional:-->\r
               <path>?</path>\r
               <!--Optional:-->\r
               <user>?</user>\r
               <!--Optional:-->\r
               <password>?</password>\r
               <!--Optional:-->\r
               <port>?</port>\r
               <passive>?</passive>\r
               <encrypted>?</encrypted>\r
               <checkFileSize>?</checkFileSize>\r
               <!--Optional:-->\r
               <fileName>?</fileName>\r
               <!--Optional:-->\r
               <disseminationTool>?</disseminationTool>\r
            </ftps>\r
            <!--Optional:-->\r
            <address>\r
               <!--Optional:-->\r
               <address>?</address>\r
               <!--Optional:-->\r
               <city>?</city>\r
               <!--Optional:-->\r
               <country>?</country>\r
               <!--Optional:-->\r
               <state>?</state>\r
               <!--Optional:-->\r
               <zip>?</zip>\r
            </address>\r
            <needUserAccount>?</needUserAccount>\r
            <!--Optional:-->\r
            <profile>?</profile>\r
            <!--Optional:-->\r
            <classOfService>?</classOfService>\r
            <!--Zero or more repetitions:-->\r
            <backUps>?</backUps>\r
            <!--Zero or more repetitions:-->\r
            <groups>\r
               <isGlobal>?</isGlobal>\r
               <!--Optional:-->\r
               <centreName>?</centreName>\r
               <!--Zero or more repetitions:-->\r
               <groupIds>?</groupIds>\r
            </groups>\r
         </arg0>\r
      </user:updateUser>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/updateUser"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="4073b8af-6aa8-4316-8bb4-67aa47ec3a49" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="updateUserProfile TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="557e6b49-24b4-4c24-8759-fb2206cf68a1" name="updateUserProfile"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>updateUserProfile</con:operation><con:request name="updateUserProfile" id="77d22228-2897-4bd2-a5c0-fee7a997d618"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:updateUserProfile>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
      </user:updateUserProfile>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/updateUserProfile"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="3a9c96dd-d528-4a52-aaa9-ed42864d2f36" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="userIsMemberOfGroup TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="3d46c84c-5a97-4ef2-9a1c-9f371475aa94" name="userIsMemberOfGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>userIsMemberOfGroup</con:operation><con:request name="userIsMemberOfGroup" id="62d3e615-2306-4223-98bc-19bdbae83443"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:userIsMemberOfGroup>\r
         <!--Optional:-->\r
         <arg0>?</arg0>\r
         <!--Optional:-->\r
         <arg1>?</arg1>\r
         <!--Optional:-->\r
         <arg2>?</arg2>\r
      </user:userIsMemberOfGroup>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:wsaConfig action="http://usermanagement.openwis.org/UserManagementService/userIsMemberOfGroup"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="44035b6e-52fa-46de-b931-b17dca3f808c" name="MonitoringServiceServiceSoapBinding TestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="9f65cdce-1cf3-46af-bdb1-6cdc2c015004" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="isSecurityServiceAvailable TestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="6d095ac3-6ab0-4000-a4a6-36c7398bf40d" name="isSecurityServiceAvailable"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MonitoringServiceSoapBinding</con:interface><con:operation>isSecurityServiceAvailable</con:operation><con:request name="isSecurityServiceAvailable" id="6aac0a1c-e335-4fae-b30b-93713ba24927"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/MonitoringService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:user="http://usermanagement.openwis.org/">\r
   <soapenv:Header/>\r
   <soapenv:Body>\r
      <user:isSecurityServiceAvailable/>\r
   </soapenv:Body>\r
</soapenv:Envelope>]]></con:request><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig action="http://usermanagement.openwis.org/MonitoringService/isSecurityServiceAvailable" mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:testSuite id="0b99e068-420a-428b-a807-1d567de3cf2d" name="SecurityServiceTestSuite"><con:settings/><con:runType>SEQUENTIAL</con:runType><con:testCase id="e08a169f-331e-47d9-858f-1cb572b09658" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="init" searchProperties="true"><con:settings/><con:testStep type="request" id="8bf48689-af44-4e67-8861-03ee1902d505" name="initialize"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>initialize</con:operation><con:request name="initialize" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="c0e27f89-7b23-4a6b-8686-10c231597347"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:initialize>
         <!--Optional:-->
         <adminName>admin</adminName>
         <!--Optional:-->
         <adminPassword>admin</adminPassword>
         <!--Optional:-->
         <emailContact>admin@meteo.fr</emailContact>
         <!--Optional:-->
         <centreName>TestCenter</centreName>
         <!--Optional:-->
         <firstName>admin</firstName>
         <!--Optional:-->
         <lastName>admin</lastName>
      </sec:initialize>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="72122131-ef1f-48a2-9abf-603c690c765d" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/initialize"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="ca1387e7-320e-468e-b04e-e4a4ba2abb8a" name="isSecurityServiceAvailable"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>MonitoringServiceSoapBinding</con:interface><con:operation>isSecurityServiceAvailable</con:operation><con:request name="isSecurityServiceAvailable" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="5f65ec41-6782-4a2e-bc1d-92d34bac3f48"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/MonitoringService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:isSecurityServiceAvailable/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="0125839e-f1ae-43bd-a0f9-8508d650548b" name="SOAP Response"/><con:assertion type="XPath Match" id="2c97378c-a9da-4221-abd8-cf00e3508852" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns2='http://securityservice.openwis.org/';

/soap:Envelope</path><content><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <ns2:isSecurityServiceAvailableResponse xmlns:ns2="http://securityservice.openwis.org/">
      <return>true</return>
    </ns2:isSecurityServiceAvailableResponse>
  </soap:Body>
</soap:Envelope>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/MonitoringService/isSecurityServiceAvailable"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="d2c1c9fe-0045-4191-891a-e6f254f4ed19" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="UserTestCase" searchProperties="true"><con:settings/><con:testStep type="request" id="0dfab835-6eac-4538-83bd-426976256273" name="createLocalGroupId1"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>createLocalGroupId</con:operation><con:request name="createLocalGroupId1" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="93b03093-416d-4398-9a4f-18578f830cba"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:createLocalGroupId>
         <!--Optional:-->
         <localCentreGroupName>TestCenter</localCentreGroupName>
         <!--Optional:-->
         <localGroupId>localgroup1</localGroupId>
      </sec:createLocalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9fb25fb9-b570-4b86-8c1f-026e20692eb9" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/createLocalGroupId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="a224c105-470b-4f90-be5b-10a637cd7376" name="createLocalGroupId2"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>createLocalGroupId</con:operation><con:request name="createLocalGroupId2" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="93b03093-416d-4398-9a4f-18578f830cba"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:createLocalGroupId>
         <!--Optional:-->
         <localCentreGroupName>TestCenter</localCentreGroupName>
         <!--Optional:-->
         <localGroupId>localgroup2</localGroupId>
      </sec:createLocalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="9fb25fb9-b570-4b86-8c1f-026e20692eb9" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/createLocalGroupId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="401f42c3-7154-4377-96f9-c4ad88c66f9c" name="getAllGroups"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllGroups</con:operation><con:request name="getAllGroups" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dd91dd0b-d9a4-41f9-bd1a-057e20281fc5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllGroups>
         <!--Optional:-->
         <centreGroupName>TestCenter</centreGroupName>
      </sec:getAllGroups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7a7592b9-a954-487c-bf62-369626ce0547" name="SOAP Response"/><con:assertion type="XPath Match" id="e4cd8689-ddf7-446d-ad72-17d0d7b6eca0" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns2='http://securityservice.openwis.org/';
/soap:Envelope</path><content><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <ns2:getAllGroupsResponse xmlns:ns2="http://securityservice.openwis.org/">
      <return>
        <global>true</global>
        <groupIds>Institutional</groupIds>
      </return>
      <return>
        <centreName>TestCenter</centreName>
        <global>false</global>
        <groupIds>DEFAULT</groupIds>
        <groupIds>localgroup1</groupIds>
        <groupIds>localgroup2</groupIds>
      </return>
    </ns2:getAllGroupsResponse>
  </soap:Body>
</soap:Envelope>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllGroups"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="f03cf22b-a289-4d6a-991c-7be08590bd04" name="createUser"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>createUser</con:operation><con:request name="createUser" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="bd38d0c9-1e52-4cf8-a7f0-fc2b24a53400"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:createUser>
         <!--Optional:-->
         <user>
            <classOfService>BRONZE</classOfService>
            <emailContact>user1@meteo.fr</emailContact>
            <name>user1</name>
            <needUserAccount>true</needUserAccount>
            <password>user1</password>
            <profile>User</profile>
            <surName>user1</surName>
            <!--Optional:-->
            <userName>user1</userName>
         </user>
         <centreName>TestCenter</centreName>
      </sec:createUser>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="bc24ac04-cf09-48e4-acd9-6fa4eb087720" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/createUser"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="c664dcc5-1bc8-40a6-bc24-96cc37a9ff14" name="addUserToLocalGroup"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>addUserToLocalGroup</con:operation><con:request name="addUserToLocalGroup" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="4c8b4601-d11f-45b4-8561-a96202a24d14"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:addUserToLocalGroup>
         <!--Optional:-->
         <userName>user1</userName>
         <!--Optional:-->
         <centreGroupName>TestCenter</centreGroupName>
         <!--Optional:-->
         <groupId>localgroup1</groupId>
      </sec:addUserToLocalGroup>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="c4c52cd2-49a1-4e90-977d-cdef81f8116f" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/addUserToLocalGroup"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="8419b99d-31aa-4231-9f67-f3120a774189" name="getAllUsersByLocalGroupId"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllUsersByLocalGroupId</con:operation><con:request name="getAllUsersByLocalGroupId" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e05708c6-61c6-4cb4-8270-97b6578651c1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUsersByLocalGroupId>
         <!--Optional:-->
         <localCentreGroupName>TestCenter</localCentreGroupName>
         <!--Optional:-->
         <localGroupId>localgroup1</localGroupId>
      </sec:getAllUsersByLocalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ff3c6b94-f8a2-4a01-a726-cd0e2526edc8" name="SOAP Response"/><con:assertion type="XPath Match" id="e3c354a5-38c0-4ca0-ac13-0ee5e099334c" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns2='http://securityservice.openwis.org/';
/soap:Envelope</path><content><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <ns2:getAllUsersByLocalGroupIdResponse xmlns:ns2="http://securityservice.openwis.org/">
      <return>
        <address/>
        <classOfService>BRONZE</classOfService>
        <emailContact>user1@meteo.fr</emailContact>
        <groups>
          <centreName>TestCenter</centreName>
          <global>false</global>
          <groupIds>DEFAULT</groupIds>
          <groupIds>localgroup1</groupIds>
        </groups>
        <name>user1</name>
        <needUserAccount>true</needUserAccount>
        <profile>User</profile>
        <surName>user1</surName>
        <userName>user1</userName>
      </return>
    </ns2:getAllUsersByLocalGroupIdResponse>
  </soap:Body>
</soap:Envelope>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByLocalGroupId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="7a64c26e-5044-447b-9360-9142cbc89e38" name="removeUser"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>removeUser</con:operation><con:request name="removeUser" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="49f84d1e-b5e4-4f0c-8007-944befd98635"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeUser>
         <!--Optional:-->
         <username>user1</username>
         <!--Optional:-->
         <centre>TestCenter</centre>
      </sec:removeUser>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="81726810-a172-481d-a0e6-a864ce056155" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/removeUser"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="d8a70f1d-1d4b-4be4-bcad-0c9406772df4" name="getAllUsersByLocalGroupIdafterRemove"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllUsersByLocalGroupId</con:operation><con:request name="getAllUsersByLocalGroupIdafterRemove" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="e05708c6-61c6-4cb4-8270-97b6578651c1"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllUsersByLocalGroupId>
         <!--Optional:-->
         <localCentreGroupName>TestCenter</localCentreGroupName>
         <!--Optional:-->
         <localGroupId>localgroup1</localGroupId>
      </sec:getAllUsersByLocalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="ff3c6b94-f8a2-4a01-a726-cd0e2526edc8" name="SOAP Response"/><con:assertion type="XPath Match" id="e3c354a5-38c0-4ca0-ac13-0ee5e099334c" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns2='http://securityservice.openwis.org/';
/soap:Envelope</path><content>&lt;soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  &lt;soap:Body>
    &lt;ns2:getAllUsersByLocalGroupIdResponse xmlns:ns2="http://securityservice.openwis.org/"/>
  &lt;/soap:Body>
&lt;/soap:Envelope></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllUsersByLocalGroupId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="bf28ef9a-0817-47b7-88f5-28d1052d5a7f" name="removeLocalGroupId"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>removeLocalGroupId</con:operation><con:request name="removeLocalGroupId" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="d0c7a66a-b701-463f-94d1-ea621b58bef4"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:removeLocalGroupId>
         <!--Optional:-->
         <localCentreGroupName>TestCenter</localCentreGroupName>
         <!--Optional:-->
         <localGroupId>localgroup2</localGroupId>
      </sec:removeLocalGroupId>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="8f783ca4-cc8a-4ac6-b1a2-20406313a610" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/removeLocalGroupId"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="19c2b28b-618f-4fa9-93cc-d4b9751fcd05" name="getAllGroupsAfterRemove"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>getAllGroups</con:operation><con:request name="getAllGroupsAfterRemove" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="dd91dd0b-d9a4-41f9-bd1a-057e20281fc5"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:getAllGroups>
         <!--Optional:-->
         <centreGroupName>TestCenter</centreGroupName>
      </sec:getAllGroups>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7a7592b9-a954-487c-bf62-369626ce0547" name="SOAP Response"/><con:assertion type="XPath Match" id="e4cd8689-ddf7-446d-ad72-17d0d7b6eca0" name="XPath Match"><con:configuration><path>declare namespace soap='http://schemas.xmlsoap.org/soap/envelope/';
declare namespace ns2='http://securityservice.openwis.org/';
/soap:Envelope</path><content><![CDATA[<soap:Envelope xmlns:soap="http://schemas.xmlsoap.org/soap/envelope/">
  <soap:Body>
    <ns2:getAllGroupsResponse xmlns:ns2="http://securityservice.openwis.org/">
      <return>
        <global>true</global>
        <groupIds>Institutional</groupIds>
      </return>
      <return>
        <centreName>TestCenter</centreName>
        <global>false</global>
        <groupIds>DEFAULT</groupIds>
        <groupIds>localgroup1</groupIds>
      </return>
    </ns2:getAllGroupsResponse>
  </soap:Body>
</soap:Envelope>]]></content><allowWildcards>false</allowWildcards><ignoreNamspaceDifferences>false</ignoreNamspaceDifferences><ignoreComments>false</ignoreComments></con:configuration></con:assertion><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/GroupManagementService/getAllGroups"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:testCase id="f9e91fe7-0c8e-482a-a1d5-479a931b095e" failOnError="true" failTestCaseOnErrors="true" keepSession="false" maxResults="0" name="CleanAll" searchProperties="true"><con:settings/><con:testStep type="request" name="cleanGroups" id="2d746d81-afad-48b2-94ae-45e6be036496"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>GroupManagementServiceSoapBinding</con:interface><con:operation>resetGroups</con:operation><con:request name="cleanGroups" id="27588cbd-dc0d-4d3b-b891-d3ce70d280c7"><con:settings/><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/GroupManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:resetGroups/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="d099b8d2-7d95-4118-b73d-f907acecc15f"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:testStep type="request" id="65e8e254-f70b-47b9-8b93-ae636498ee84" name="cleanUsers"><con:settings/><con:config xsi:type="con:RequestStep" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"><con:interface>UserManagementServiceSoapBinding</con:interface><con:operation>resetUsers</con:operation><con:request name="cleanUsers" outgoingWss="" incomingWss="" timeout="" sslKeystore="" useWsAddressing="false" useWsReliableMessaging="false" wssPasswordType="" id="2957aa6f-10fd-47a0-9d0f-f5e155d120cd"><con:settings><con:setting id="com.eviware.soapui.impl.wsdl.WsdlRequest@request-headers">&lt;xml-fragment/></con:setting></con:settings><con:encoding>UTF-8</con:encoding><con:endpoint>http://localhost:8080/openwis-securityservice-war/services/UserManagementService</con:endpoint><con:request><![CDATA[<soapenv:Envelope xmlns:soapenv="http://schemas.xmlsoap.org/soap/envelope/" xmlns:sec="http://securityservice.openwis.org/" xmlns:user="http://usermanagement.openwis.org/">
   <soapenv:Header/>
   <soapenv:Body>
      <sec:resetUsers/>
   </soapenv:Body>
</soapenv:Envelope>]]></con:request><con:assertion type="SOAP Response" id="7c15da7e-3375-45cd-b43a-70928beaf3ea" name="SOAP Response"/><con:credentials><con:authType>No Authorization</con:authType></con:credentials><con:jmsConfig JMSDeliveryMode="PERSISTENT"/><con:jmsPropertyConfig/><con:wsaConfig mustUnderstand="NONE" version="200508" action="http://usermanagement.openwis.org/UserManagementService/resetUsers"/><con:wsrmConfig version="1.2"/></con:request></con:config></con:testStep><con:properties/></con:testCase><con:properties/></con:testSuite><con:properties/><con:wssContainer/><con:oAuth2ProfileContainer/></con:soapui-project>