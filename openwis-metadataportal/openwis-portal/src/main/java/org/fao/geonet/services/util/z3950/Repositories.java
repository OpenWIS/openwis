//=============================================================================
//===	Copyright (C) 2001-2007 Food and Agriculture Organization of the
//===	United Nations (FAO-UN), United Nations World Food Programme (WFP)
//===	and United Nations Environment Programme (UNEP)
//===
//===	This program is free software; you can redistribute it and/or modify
//===	it under the terms of the GNU General Public License as published by
//===	the Free Software Foundation; either version 2 of the License, or (at
//===	your option) any later version.
//===
//===	This program is distributed in the hope that it will be useful, but
//===	WITHOUT ANY WARRANTY; without even the implied warranty of
//===	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU
//===	General Public License for more details.
//===
//===	You should have received a copy of the GNU General Public License
//===	along with this program; if not, write to the Free Software
//===	Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA 02110-1301, USA
//===
//===	Contact: Jeroen Ticheler - FAO - Viale delle Terme di Caracalla 2,
//===	Rome - Italy. email: geonetwork@osgeo.org
//==============================================================================

package org.fao.geonet.services.util.z3950;

import java.io.FileOutputStream;

import jeeves.constants.Jeeves;
import jeeves.server.context.ServiceContext;
import jeeves.utils.Xml;

import org.jdom.Comment;
import org.jdom.Document;
import org.jdom.Element;

//=============================================================================

/**
 * Z3950 Repositories - setup needed for both client and server ops.
 */

public class Repositories {

   //--------------------------------------------------------------------------

   /**
    * builds the repositories.
    *
    * @param appPath the app path
    * @param context the context
    * @return true, if successful
    */
   public static boolean build(String appPath, ServiceContext context) {
      try {
         //--- build repositories file from template repositories file

         String tempRepo = appPath + Jeeves.Path.WEBINF + "classes/JZKitConfig.xml" + ".tem";
         String realRepo = appPath + Jeeves.Path.WEBINF + "classes/JZKitConfig.xml";

         buildRepositoriesFile(tempRepo, realRepo);

      } catch (Exception e) {
         context.warning("Cannot initialize Z39.50 repositories : " + e.getMessage());
         e.printStackTrace();
         return false;
      }
      return true;
   }

   //--------------------------------------------------------------------------
   //---
   //--- Private methods
   //---
   //--------------------------------------------------------------------------

   /**
    * Builds the repositories file.
    *
    * @param src the src
    * @param des the des
    * @throws Exception the exception
    */
   private static void buildRepositoriesFile(String src, String des) throws Exception {
      Element root = Xml.loadFile(src);

      // --- insert warning into file as comment - first child element
      root.addContent(0, new Comment("\nWARNING - Do NOT MODIFY this file!\n"
            + "It is AUTOMATICALLY GENERATED by GeoNetwork each time it starts up \n"
            + "from the contents of " + src + ".\n"));

      //--- now output the repositories file
      FileOutputStream os = new FileOutputStream(des);
      Xml.writeResponse(new Document(root), os);
      os.close();
   }

}

//=============================================================================

